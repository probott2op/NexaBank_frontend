openapi: 3.1.0
info:
  title: Product and Pricing Management API
  description: |-
    # Comprehensive Banking Product & Pricing Management System

    ## Overview
    Enterprise-grade RESTful API for managing financial products, pricing structures, and product configurations in banking and financial institutions. This system provides complete lifecycle management for various financial products including Savings Accounts, Current Accounts, Fixed Deposits, Loans, Credit Cards, and more.

    ## Key Features
    - **Product Management**: Create, update, retrieve, and manage financial products with comprehensive attributes
    - **Interest Rate Configuration**: Define simple and compound interest rates with tiered structures
    - **Charge & Fee Management**: Configure product charges, fees, and pricing models
    - **Balance Configuration**: Set minimum balance requirements, overdraft limits, and balance types
    - **Business Rules Engine**: Define eligibility criteria, validation rules, and business logic
    - **Transaction Types**: Configure allowed transaction types, limits, and channel availability
    - **Communication Templates**: Manage customer notifications and communication workflows
    - **Role-Based Access Control**: Define permissions and approval workflows

    ## API Design Principles
    - **RESTful Architecture**: Standard HTTP methods (GET, POST, PUT, DELETE)
    - **Code-Based Routing**: All endpoints use business-friendly codes instead of technical IDs
    - **Pagination Support**: Efficient data retrieval with page, size, and sort parameters
    - **Comprehensive Validation**: Request validation using Jakarta Bean Validation
    - **Audit Trail**: Automatic tracking of created/updated by and timestamps
    - **Error Handling**: Standardized error responses with meaningful messages

    ## Response Codes
    - **200 OK**: Successful GET/PUT request
    - **201 Created**: Successful POST request with resource creation
    - **204 No Content**: Successful DELETE request
    - **400 Bad Request**: Invalid request data or validation failure
    - **404 Not Found**: Resource not found
    - **500 Internal Server Error**: Server-side error

    ## Getting Started
    1. Browse the API endpoints organized by functional areas
    2. Review the data models and required/optional fields
    3. Use the 'Try it out' feature to test endpoints
    4. Check example requests and responses for each operation

    ## Authentication
    This API uses JWT Bearer token authentication from NEXA Bank Auth Service.

    **How to authenticate:**
    1. Click the **Authorize** button (ðŸ”“) at the top of this page
    2. Enter your JWT token in the format: `Bearer <your_token>`
    3. Click **Authorize** to apply the token to all requests

    **To get a JWT token:**
    ```bash
    curl -X POST http://localhost:3020/api/auth/login \
      -H "Content-Type: application/json" \
      -d '{"email": "admin@nexabank.com", "password": "YourPassword"}'
    ```

    **Access Rules:**
    - **GET requests**: Public (no authentication required)
    - **POST/PUT/DELETE requests**: Require ADMIN role in JWT token

    ## Support
    For technical support, documentation, or API access requests, contact the Banking Labs support team.
  contact:
    name: Banking Labs Development Team
    url: https://www.bankinglabs.com/support
    email: support@bankinglabs.com
  license:
    name: Apache License 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Complete API Documentation & User Guide
  url: https://docs.bankinglabs.com/product-pricing-api
servers:
  - url: http://localhost:8080
    description: Local Development Server
  - url: https://api-dev.bankinglabs.com
    description: Development Environment
  - url: https://api-uat.bankinglabs.com
    description: User Acceptance Testing Environment
  - url: https://api.bankinglabs.com
    description: Production Environment
security:
  - bearerAuth: []
tags:
  - name: Product Interest Rates
    description: This API provides a structured rate card for financial products like fixed deposits. It allows for the retrieval of precise interest rates based on the product's term length. For each term, the API returns a set of rates corresponding to various payout schedules, including cumulative and non-cumulative (monthly, quarterly, yearly) options.
  - name: Product Transaction Types
    description: API for managing allowed transaction types and transaction configuration for products. Transaction configurations define which operations are permitted on a product (DEPOSIT, WITHDRAWAL, TRANSFER, PAYMENT, etc.), transaction limits, processing rules, and channel availability (ATM, ONLINE, BRANCH, MOBILE). Each transaction type includes minimum/maximum amount limits, daily limits, and frequency restrictions. Essential for channel management, fraud prevention, and customer service optimization.
  - name: Product Communication Templates
    description: API for managing customer communication templates and notification configurations for products. Communication templates define automated messages sent to customers for various events (ACCOUNT_OPENING, TRANSACTION_ALERT, STATEMENT_GENERATION, PAYMENT_DUE, etc.). Supports multiple communication channels (EMAIL, SMS, PUSH_NOTIFICATION, IN_APP, POSTAL_MAIL) and communication types (TRANSACTIONAL, PROMOTIONAL, REGULATORY, STATEMENT). Critical for customer engagement, compliance notifications, and regulatory reporting.
  - name: Product Balance Types
    description: 'API for defining which balance types are supported/applicable for a financial product. For example, a Loan product would have: LOAN_PRINCIPAL, LOAN_INTEREST, OVERDRAFT, PENALTY. A Fixed Deposit product would have: FD_PRINCIPAL, FD_INTEREST. This simply indicates which balance types are relevant for the product.'
  - name: Product Management
    description: Comprehensive API for managing financial products including creation, retrieval, update, deletion, and search operations. Products can be of various types (SAVINGS, CURRENT, LOAN, etc.) and contain detailed configuration for pricing, charges, balances, communication templates, and business rules.
  - name: Product Charges & Fees
    description: Comprehensive API for managing product charges, fees, and pricing structures. Charges include account maintenance fees, transaction fees, processing charges, penalty fees, and service charges. Supports various charge types (FIXED, PERCENTAGE), calculation methods, frequency configurations (ONE_TIME, MONTHLY, QUARTERLY, ANNUALLY), and debit/credit indicators. Essential for revenue generation and transparent customer pricing.
  - name: Product Roles & Permissions
    description: An API for managing which user roles can access a specific financial product. It establishes a simple mapping between a product and one or more roles (e.g., 'OWNER', 'CO_OWNER', 'GUARDIAN'), effectively creating an access list. This controls product visibility and eligibility at a high level.
  - name: Product Business Rules
    description: This API is the definitive source for managing all business rules that govern a financial product. It allows you to configure these rules as key attributes, including balance limits (min/max), conditional interest rate bonuses (e.g., for 'Gold members' or 'under 18'), and the primary interest calculation method (simple vs. compound with its frequency). It's the central hub for a product's entire configurable DNA and operational logic.
paths:
  /api/products/{productCode}:
    get:
      tags:
        - Product Management
      summary: Retrieve complete details of a specific product
      description: |
        Fetch comprehensive information about a product using its unique product code.

        **What it returns:**
        - Complete product details (code, name, type, status, currency)
        - Interest configuration (type and compounding frequency)
        - All related entities:
          * Interest rate tiers and configurations
          * Fee and charge schedules
          * Applicable balance types
          * Associated roles and permissions
          * Business rules and validations
          * Transaction configurations
          * Communication templates

        **Use Cases:**

        **Scenario 1: Customer Product Inquiry**
        - Customer service agent needs product details
        - Retrieve complete product configuration
        - View interest rates, fees, terms

        **Scenario 2: Product Configuration Review**
        - Admin reviewing product setup
        - Verify all interest rates and charges configured
        - Check business rules and validations

        **Scenario 3: Account Opening Process**
        - System needs product details for new account
        - Retrieve interest calculation rules
        - Apply correct charges and balance types

        **Scenario 4: Product Comparison**
        - Customer comparing multiple products
        - Retrieve each product's full details
        - Compare interest rates, fees, features

        **Related Endpoints:**
        - GET /api/products - List all products
        - PUT /api/products/{code} - Update product
        - DELETE /api/products/{code} - Remove product
        - GET /api/products/search - Search products

        **Response Details:**
        - All nested collections included in single response
        - No need for separate calls to get related data
        - Complete configuration ready for use
      operationId: getProductByCode
      parameters:
        - name: productCode
          in: path
          description: |
            Unique product code identifier (business key).

            Examples:
            - SAV-HIGH-YIELD-2025
            - FD001
            - CURR-BUSINESS-2025

            Format: Usually {TYPE}-{VARIANT}-{YEAR}
          required: true
          schema:
            type: string
          example: FD001
      responses:
        '200':
          description: Product found successfully with complete details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailsDTO'
              examples:
                Fixed deposit under 500000:
                  summary: Fixed deposit with under 500000 with Quarterly compounding
                  description: Fixed deposit under 500000
                  value:
                    productId: 7fd263eb-1553-46d7-b4ce-60811521229a
                    productCode: FD001
                    productName: Fixed Deposit under 500000
                    productType: FIXED_DEPOSIT
                    currency: INR
                    status: ACTIVE
                    interestType: COMPOUND
                    compoundingFrequency: QUARTERLY
                    productRules:
                      - ruleId: 1baae6cf-106a-444d-b7a7-85b889f329d8
                        ruleCode: JR001
                        ruleName: Extra Interest for under 18
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '0.5'
                        validationType: EXACT
                      - ruleId: 363ffabc-0827-46d3-bcd1-adae3f42ffe3
                        ruleCode: MAXINT001
                        ruleName: Maximum excess interest
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '2'
                        validationType: MIN_MAX
                      - ruleId: 37fe7f8a-d9ea-4661-8ac9-dc3dc3ea5dcd
                        ruleCode: MAX001
                        ruleName: Maximum for FD001
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '500000'
                        validationType: MIN_MAX
                      - ruleId: 473f6407-6378-412e-8ef4-b579e362d83a
                        ruleCode: GOLD001
                        ruleName: Gold members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '1'
                        validationType: EXACT
                      - ruleId: 6c4879fc-9650-4762-bdff-28c3fbf8177f
                        ruleCode: SIL001
                        ruleName: Silver members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '0.5'
                        validationType: EXACT
                      - ruleId: a9e3f3f3-a120-41a3-8e5e-b2c1f0b5e080
                        ruleCode: MIN001
                        ruleName: Minimum for FD001
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '10000'
                        validationType: MIN_MAX
                      - ruleId: c478c7af-9d64-41a6-b2e2-45552054c85d
                        ruleCode: SR001
                        ruleName: Extra Interest for sr
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '0.75'
                        validationType: EXACT
                      - ruleId: d77a6842-2296-40cc-af4b-81b72c770e61
                        ruleCode: EMP001
                        ruleName: Employee members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '1.5'
                        validationType: EXACT
                      - ruleId: fb409ac1-149f-4163-8e88-835da99bb8bc
                        ruleCode: DY001
                        ruleName: Extra Interest for Digi Youth
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '0.25'
                        validationType: EXACT
                      - ruleId: fe956b24-a359-4c26-bafd-05855e669851
                        ruleCode: PLAT001
                        ruleName: Platinum members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '1.5'
                        validationType: EXACT
                    productCharges:
                      - chargeId: 31435394-2af5-4118-9cc7-4616df6a64ee
                        chargeCode: FEE001
                        chargeType: FEE
                        calculationType: FLAT
                        frequency: QUARTERLY
                        amount: 200
                      - chargeId: 9953d914-423c-45af-936b-ebffbdd709be
                        chargeCode: PEN-L-001
                        chargeType: PENALTY
                        calculationType: PERCENTAGE
                        frequency: ONE_TIME
                        amount: 0.5
                      - chargeId: e0167e4b-0102-4d8c-ad37-02ddb1e0f83d
                        chargeCode: PEN-H-001
                        chargeType: PENALTY
                        calculationType: PERCENTAGE
                        frequency: ONE_TIME
                        amount: 1
                    productRoles:
                      - roleId: f1097ab9-789c-4bf2-984a-eaa6d42b1fed
                        roleCode: ROLE001
                        roleType: OWNER
                        roleName: OWNER
                    productTransactions:
                      - transactionId: 3e6dcd5d-1615-4e93-8cd3-dc9a2bf8713f
                        transactionCode: FD_DEPOSIT
                        transactionType: DEPOSIT
                        amountLimit: null
                    productBalances:
                      - balanceId: 1360a975-0102-40d1-87d9-047c927dc794
                        balanceType: FD_INTEREST
                        isActive: true
                        createdAt: '2025-10-19T18:44:59.9126'
                      - balanceId: 88b934e7-9688-49c1-9c59-0fbff87be971
                        balanceType: FD_PRINCIPAL
                        isActive: true
                        createdAt: '2025-10-19T18:45:23.47411'
                      - balanceId: bbb417ac-fd89-4243-a995-47746d0980b7
                        balanceType: PENALTY
                        isActive: true
                        createdAt: '2025-10-19T18:45:40.10681'
                    productCommunications:
                      - commId: d3ba2f49-7801-4c63-99bd-4e64e5f7c155
                        commCode: COMM_MONTHLY_STATEMENT
                        communicationType: STATEMENT
                        channel: EMAIL
                        event: COMM_MONTHLY_STATEMENT
                        template: 'Dear ${CUSTOMER_NAME}, Your monthly statement for ${PRODUCT_NAME} account ending in ${LAST_4_DIGITS} is now available. Opening balance: ${OPENING_BALANCE}, Closing balance: ${CLOSING_BALANCE}. View full statement in the attachment.'
                        frequencyLimit: null
                    productInterests:
                      - rateId: 6c433990-8040-47e9-ba5e-d609b2e273d6
                        rateCode: INT36M001
                        termInMonths: 36
                        rateCumulative: 8
                        rateNonCumulativeMonthly: 7.85
                        rateNonCumulativeQuarterly: 7.9
                        rateNonCumulativeYearly: 7.8
                      - rateId: 953cb07f-40e3-477e-93c4-21aab0a9d387
                        rateCode: INT24M001
                        termInMonths: 24
                        rateCumulative: 7.7
                        rateNonCumulativeMonthly: 7.5
                        rateNonCumulativeQuarterly: 7.6
                        rateNonCumulativeYearly: 7.7
                      - rateId: e75bed67-db57-405d-9f35-0af9d0d62e70
                        rateCode: INT12M001
                        termInMonths: 12
                        rateCumulative: 7.6
                        rateNonCumulativeMonthly: 7.4
                        rateNonCumulativeQuarterly: 7.5
                        rateNonCumulativeYearly: 7.6
                      - rateId: fd3feafa-b19b-4540-b42d-c0fa1efdadd6
                        rateCode: INT60M001
                        termInMonths: 60
                        rateCumulative: 8.5
                        rateNonCumulativeMonthly: 8.3
                        rateNonCumulativeQuarterly: 8.4
                        rateNonCumulativeYearly: 8.5
                    createdAt: '2025-10-09T11:38:44.950171'
                    efctv_date: null
                FD for above 500000:
                  summary: Fixed deposit for above 500000 with QUARTERLY compoudning
                  description: FD for above 500000
                  value:
                    productId: ca008622-c7d2-4679-a77d-d60a17baefff
                    productCode: FD002
                    productName: 'FD for above 500000 '
                    productType: FIXED_DEPOSIT
                    currency: INR
                    status: ACTIVE
                    interestType: COMPOUND
                    compoundingFrequency: QUARTERLY
                    productRules: []
                    productCharges: []
                    productRoles: []
                    productTransactions: []
                    productBalances: []
                    productCommunications: []
                    productInterests: []
                    createdAt: '2025-10-16T09:54:40.583654'
                    efctv_date: null
                Personal Loan Product:
                  summary: personal loan with monthly compounding below Â¥500000
                  description: Personal Loan Product
                  value:
                    productId: 770e8400-e29b-41d4-a716-446655440222
                    productCode: LOAN-PERSONAL-LOW-JPY-25
                    productName: Personal Loan below Â¥500000
                    productType: LOAN
                    productDescription: Unsecured personal loan up to Â¥500,000
                    currency: JPY
                    status: ACTIVE
                    interestType: COMPOUND
                    compoundingFrequency: MONTHLY
                    effectiveStartDate: '2025-01-01'
                    effectiveEndDate: null
                    productCharges:
                      - chargeId: 772e8400-e29b-41d4-a716-446655440011
                        ChargeCode: ORG-FEE-LOAN
                        chargeName: Origination Fee
                        chargeType: FEE
                        calculationType: PERCENTAGE
                        frequency: ONE_TIME
                        amount: 2
                      - chargeId: 773e8400-e29b-41d4-a716-446655440012
                        chargeName: Late Payment Fee
                        chargeType: FLAT
                        chargeAmount: 35
                        chargeFrequency: PER_OCCURRENCE
                        isActive: true
                    productBalances:
                      - balanceId: 883e8400-e29b-41d4-a716-446655440013
                        balanceType: LOAN_PRINCIPAL
                        isActive: true
                      - balanceId: 884e8400-e29b-41d4-a716-446655440014
                        balanceType: LOAN_INTEREST
                        isActive: true
                      - balanceId: 885e8400-e29b-41d4-a716-446655440015
                        balanceType: PENALTY
                        isActive: true
                    productRules: []
                    productTransactions: []
                    productRoles: []
                    productCommunications: []
                    productInterests: []
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-01-10T14:20:00'
        '404':
          description: Product not found
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-15T10:30:00'
                    path: /api/products/SAV-INVALID-2025
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Failed to retrieve product details
                timestamp: '2025-10-15T10:30:00'
    put:
      tags:
        - Product Management
      summary: Update an existing product's core details
      description: |
        Update the core configuration of an existing product. This endpoint modifies product metadata,
        status, interest configuration, and effective dates.

        **What can be updated:**
        - Product name and description
        - Product status (ACTIVE/INACTIVE/PENDING)
        - Interest type (SIMPLE/COMPOUND)
        - Compounding frequency (DAILY/MONTHLY/QUARTERLY/SEMI_ANNUALLY/ANNUALLY)
        - Effective start and end dates

        **What CANNOT be updated:**
        - Product code (immutable identifier)
        - Product type (structural change not allowed)
        - Product ID (system generated)
        - Creation timestamp

        **Important Notes:**
        - Related entities (interest rates, charges, balances) are updated via separate endpoints
        - Changing status to INACTIVE prevents new accounts but doesn't affect existing ones
        - End date must be after start date
        - Product code in path must match code in request body

        **Use Cases:**

        **Scenario 1: Update Product Status**
        - Deactivate outdated product
        - Change status from PENDING to ACTIVE
        - Set end date for product retirement

        **Scenario 2: Modify Interest Configuration**
        - Change from SIMPLE to COMPOUND interest
        - Update compounding frequency from QUARTERLY to MONTHLY
        - Adjust interest calculation method

        **Scenario 3: Update Product Metadata**
        - Rename product for clarity
        - Update product description
        - Modify marketing text

        **Scenario 4: Extend Product Lifecycle**
        - Update effective end date
        - Extend product availability
        - Modify effective date range

        **Related Endpoints:**
        - PUT /api/products/{code}/interest/{id} - Update interest rates
        - PUT /api/products/{code}/charge/{id} - Update charges
        - PUT /api/products/{code}/balance/{id} - Update balance config
        - GET /api/products/{code} - View current details

        **Validation Rules:**
        - Required: productCode, productName, productType
        - Enum values must be valid (SIMPLE/COMPOUND, DAILY/MONTHLY/etc.)
        - Dates must be in ISO-8601 format
        - effectiveEndDate > effectiveStartDate
      operationId: updateProduct
      parameters:
        - name: productCode
          in: path
          description: |
            Product code identifier (must match code in request body).

            Example: SAV-HIGH-YIELD-2025
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateProductRequestDTO'
        required: true
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailsDTO'
              examples:
                Status Change to INACTIVE:
                  summary: Deactivated savings product with end date
                  description: Status Change to INACTIVE
                  value:
                    productId: 550e8400-e29b-41d4-a716-446655440000
                    productCode: SAV-HIGH-YIELD-2025
                    productName: High Yield Savings Account
                    productType: SAVINGS
                    productDescription: Premium savings account (discontinued)
                    currency: INR
                    status: INACTIVE
                    interestType: COMPOUND
                    compoundingFrequency: DAILY
                    effectiveStartDate: '2025-01-01'
                    effectiveEndDate: '2025-12-31'
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-10-15T10:30:00'
                Interest Config Update:
                  summary: Changed from quarterly to monthly compounding
                  description: Interest Config Update
                  value:
                    productId: 660e8400-e29b-41d4-a716-446655440111
                    productCode: FD-1Y-2025
                    productName: 1 Year Fixed Deposit - Enhanced
                    productType: DEPOSIT
                    productDescription: Now with monthly compounding for better returns
                    currency: INR
                    status: ACTIVE
                    interestType: COMPOUND
                    compoundingFrequency: MONTHLY
                    effectiveStartDate: '2025-01-01'
                    effectiveEndDate: null
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-10-15T10:35:00'
        '400':
          description: Invalid request data
          content:
            application/json:
              examples:
                Invalid Enum Value:
                  description: Invalid Enum Value
                  value:
                    error: Validation Failed
                    message: 'Invalid interestType value: INVALID. Must be one of: SIMPLE, COMPOUND'
                    timestamp: '2025-10-15T10:30:00'
                Invalid Date Range:
                  description: Invalid Date Range
                  value:
                    error: Validation Failed
                    message: effectiveEndDate must be after effectiveStartDate
                    timestamp: '2025-10-15T10:30:00'
                Product Code Mismatch:
                  description: Product Code Mismatch
                  value:
                    error: Validation Failed
                    message: Product code in path (SAV-HIGH-YIELD-2025) does not match request body (SAV-OLD-2025)
                    timestamp: '2025-10-15T10:30:00'
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: SAV-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Failed to update product
                timestamp: '2025-10-15T10:30:00'
    delete:
      tags:
        - Product Management
      summary: Delete a product (permanent removal)
      description: "Permanently remove a product and ALL related data from the system. This is a destructive operation\nthat cannot be undone.\n\n**What gets deleted:**\n- Product core details\n- All interest rate tiers\n- All fee and charge configurations\n- All balance type mappings\n- All business rules\n- All transaction configurations\n- All role assignments\n- All communication templates\n\n**âš ï¸\x8F IMPORTANT WARNINGS:**\n- This operation is **IRREVERSIBLE**\n- All related data is **PERMANENTLY DELETED**\n- Existing customer accounts using this product are NOT affected\n- Audit trail for past transactions is maintained\n- Cannot delete if active accounts exist (future enhancement)\n\n**Recommended Alternative:**\nInstead of deletion, consider:\n1. Set status to INACTIVE using PUT /api/products/{code}\n2. Set effectiveEndDate to retire product gracefully\n3. This preserves audit trail and historical data\n\n**Use Cases:**\n\n**Scenario 1: Test Data Cleanup**\n- Remove test products from development environment\n- Clean up incorrectly created products\n- Reset demo data\n\n**Scenario 2: Duplicate Product Removal**\n- Remove accidentally created duplicates\n- Delete products created in error\n- Clean up failed migrations\n\n**Scenario 3: Compliance Requirement**\n- GDPR/data deletion requests (rare)\n- Legal requirement to remove product\n- Must be documented and approved\n\n**â\x9DŒ WRONG USE CASES:**\n- Retiring a product â†’ Use status=INACTIVE instead\n- Temporary product suspension â†’ Use status=INACTIVE\n- Product no longer offered â†’ Set effectiveEndDate\n\n**Related Endpoints:**\n- PUT /api/products/{code} - Update status to INACTIVE (preferred)\n- GET /api/products/{code} - Verify product before deletion\n- POST /api/products - Create replacement product\n\n**Production Best Practices:**\n1. Always verify product code before deletion\n2. Export product configuration as backup\n3. Check for active accounts (manual verification)\n4. Document reason for deletion\n5. Get proper authorization\n6. Consider soft delete (INACTIVE status) instead\n"
      operationId: deleteProduct
      parameters:
        - name: productCode
          in: path
          description: "Product code to permanently delete.\n\nâš ï¸\x8F WARNING: This cannot be undone!\n\nExample: SAV-HIGH-YIELD-2025\n\nVerify product code carefully before execution.\n"
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      responses:
        '204':
          description: Product and all related data successfully deleted. No content returned.
          content:
            application/json: {}
        '404':
          description: Product not found (may already be deleted)
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-15T10:30:00'
                    path: /api/products/SAV-INVALID-2025
        '409':
          description: 'Cannot delete product (future: has active accounts)'
          content:
            application/json:
              examples:
                Has Active Accounts:
                  description: Has Active Accounts
                  value:
                    error: Conflict
                    message: 'Cannot delete product SAV-HIGH-YIELD-2025: 1,523 active accounts exist. Set status to INACTIVE instead.'
                    timestamp: '2025-10-15T10:30:00'
                    activeAccountCount: 1523
        '500':
          description: Internal server error during deletion
          content:
            application/json:
              example:
                error: Internal Server Error
                message: 'Failed to delete product: database constraint violation'
                timestamp: '2025-10-15T10:30:00'
  /api/products/{productCode}/transactions/{transactionCode}:
    get:
      tags:
        - Product Transaction Types
      summary: Retrieve specific transaction type configuration
      description: |
        Get detailed configuration for a single transaction type by its transaction code.

        **What You Get:**
        Complete transaction configuration including:
        - Transaction ID and code
        - Transaction type (enum)
        - Amount limit for the transaction

        **Use Cases:**

        **Scenario 1: Customer Inquiry**
        Customer asks about specific transaction:
        - "What's my withdrawal limit?"
        - "Can I make deposits?"
        - "What's the maximum payment amount?"
        - Retrieve exact configuration

        **Scenario 2: Before Configuration Update**
        Verify current settings before modifying:
        - Review existing limit
        - Check transaction type
        - Understand current configuration
        - Plan the update

        **Scenario 3: Troubleshooting Transaction Failure**
        Transaction declined, need to know why:
        - Check transaction amount limit
        - Verify transaction type exists
        - Review configuration

        **Scenario 4: Compliance Documentation**
        Audit requires transaction details:
        - Document specific limits
        - Verify transaction types
        - Export configuration

        **Related Endpoints:**
        - GET /api/products/{code}/transactions - View all transaction types
        - PUT /api/products/{code}/transactions/{id} - Update this configuration
        - DELETE /api/products/{code}/transactions/{id} - Remove transaction type
      operationId: getTransactionByCode
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: transactionCode
          in: path
          description: |
            Transaction code identifier.

            Unique code for the transaction type (e.g., TXN_WITHDRAWAL, TXN_DEPOSIT).
          required: true
          schema:
            type: string
          example: TXN_WITHDRAWAL
      responses:
        '200':
          description: Transaction configuration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTransactionDTO'
              examples:
                Withdrawal Configuration:
                  summary: Withdrawal transaction type details
                  description: Withdrawal Configuration
                  value:
                    transactionId: 991e8400-e29b-41d4-a716-446655440001
                    transactionCode: TXN_WITHDRAWAL
                    transactionType: WITHDRAWAL
                    amountLimit: 2000
                Deposit Configuration:
                  summary: Deposit transaction type details
                  description: Deposit Configuration
                  value:
                    transactionId: 992e8400-e29b-41d4-a716-446655440002
                    transactionCode: TXN_DEPOSIT
                    transactionType: DEPOSIT
                    amountLimit: 50000
        '404':
          description: Transaction configuration or product not found
          content:
            application/json:
              examples:
                Transaction Not Found:
                  description: Transaction Not Found
                  value:
                    error: Resource Not Found
                    message: 'Transaction configuration not found with ID: tx-999e8400-invalid'
                    timestamp: '2025-10-18T10:00:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T10:00:00'
    put:
      tags:
        - Product Transaction Types
      summary: Update transaction type configuration
      description: |
        Modify an existing transaction type configuration.

        **What You Can Update:**
        - Transaction name
        - Transaction type (enum value)
        - Debit/Credit indicator
        - Minimum and maximum amounts
        - Description
        - Active/inactive status

        **Update Scenarios:**

        **Scenario 1: Increase Withdrawal Limits**
        Customer tier upgrade requires higher limits:
        - Increase maximumAmount from â‚¹2,00,000 to â‚¹5,00,000
        - Update minimumAmount if needed
        - Keep transaction type as WITHDRAWAL
        - Immediate effect on all customers

        **Scenario 2: Adjust Deposit Limits**
        Compliance requirement changes:
        - Reduce maximumAmount for AML compliance
        - Update minimumAmount threshold
        - Modify description to note compliance
        - Document the regulatory reason

        **Scenario 3: Temporarily Disable Transaction Type**
        Maintenance or security concern:
        - Set isActive to false
        - Keep configuration intact
        - No permanent deletion
        - Easy re-activation

        **Scenario 4: Update Transaction Details**
        Product refinement:
        - Change transaction name for clarity
        - Update description with more details
        - Adjust debit/credit indicator if needed
        - Maintain existing limits

        **Best Practices:**
        - Update during low-traffic periods
        - Test in staging environment first
        - Communicate changes to customers
        - Monitor transaction success rates
        - Keep audit trail of changes

        **Warning:**
        Changes take effect immediately for all customers. Reducing limits may cause
        previously successful transactions to fail.

        **Related Endpoints:**
        - GET /api/products/{code}/transactions/{code} - View current configuration
        - DELETE /api/products/{code}/transactions/{code} - Remove transaction type
        - GET /api/products/{code}/transactions - View all configurations
      operationId: updateTransaction
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: transactionCode
          in: path
          description: Transaction code to update
          required: true
          schema:
            type: string
          example: TXN_WITHDRAWAL
      requestBody:
        description: |
          Updated transaction configuration.

          All fields are required even when updating.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTransactionRequestDTO'
            examples:
              Increase Withdrawal Limits:
                summary: Higher limits for premium accounts
                description: Increase Withdrawal Limits
                value:
                  transactionCode: TXN_WITHDRAWAL
                  transactionName: Premium Withdrawal
                  transactionType: WITHDRAWAL
                  debitCreditIndicator: D
                  minimumAmount: 20
                  maximumAmount: 5000
                  description: Enhanced withdrawal limits for premium tier customers
                  isActive: true
              Update Deposit Configuration:
                summary: Adjusted deposit limits
                description: Update Deposit Configuration
                value:
                  transactionCode: TXN_DEPOSIT
                  transactionName: Standard Deposit
                  transactionType: DEPOSIT
                  debitCreditIndicator: C
                  minimumAmount: 10
                  maximumAmount: 75000
                  description: Updated deposit limits per compliance requirements
                  isActive: true
        required: true
      responses:
        '200':
          description: Transaction configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTransactionDTO'
              examples:
                Increased Withdrawal Limits:
                  summary: Higher withdrawal limits for premium tier
                  description: Increased Withdrawal Limits
                  value:
                    transactionId: 991e8400-e29b-41d4-a716-446655440001
                    transactionCode: TXN_WITHDRAWAL
                    transactionType: WITHDRAWAL
                    amountLimit: 5000
                Updated Deposit Configuration:
                  summary: Adjusted deposit limits for compliance
                  description: Updated Deposit Configuration
                  value:
                    transactionId: 992e8400-e29b-41d4-a716-446655440002
                    transactionCode: TXN_DEPOSIT
                    transactionType: DEPOSIT
                    amountLimit: 75000
        '400':
          description: Invalid transaction configuration
          content:
            application/json:
              examples:
                Invalid Amount Range:
                  description: Invalid Amount Range
                  value:
                    error: Validation Error
                    message: Daily limit must be greater than or equal to maximum amount
                    timestamp: '2025-10-18T10:30:00'
                Invalid Channel:
                  description: Invalid Channel
                  value:
                    error: Validation Error
                    message: 'Invalid channel: INVALID_CHANNEL. Allowed: ATM, ONLINE, MOBILE, BRANCH, PHONE, POS'
                    timestamp: '2025-10-18T10:30:00'
        '404':
          description: Transaction configuration or product not found
          content:
            application/json:
              examples:
                Transaction Not Found:
                  description: Transaction Not Found
                  value:
                    error: Resource Not Found
                    message: 'Transaction configuration not found with ID: tx-999e8400-invalid'
                    timestamp: '2025-10-18T10:30:00'
    delete:
      tags:
        - Product Transaction Types
      summary: Permanently remove transaction type configuration
      description: "Delete a transaction type configuration from the product.\n\n**âš ï¸\x8F CRITICAL WARNING:**\nThis action is PERMANENT and IRREVERSIBLE!\n- Transaction type will be completely removed\n- Configuration cannot be recovered\n- No undo functionality\n\n**Before Deleting:**\n1. **Verify Impact:** Check if transaction type is actively used\n2. **Consider Disable:** Set isActive=false instead of deleting (via PUT)\n3. **Document Reason:** Keep audit trail of why transaction was removed\n4. **Test Impact:** Verify in staging environment first\n\n**When to DELETE:**\n- Transaction type permanently discontinued\n- Removing test/development configurations\n- Product being decommissioned\n- Consolidating duplicate transaction types\n\n**When to DISABLE (Recommended Alternative):**\n- Temporary suspension needed\n- Maintenance or security concern\n- Testing new configurations\n- Want to preserve configuration\n\n**Use PUT /api/products/{code}/transactions/{code} to disable:**\nSet isActive field to false in the request body\n\n**Recommended Workflow:**\n1. Get transaction details (verify correct one)\n2. Document deletion reason\n3. Disable transaction first (test impact via PUT)\n4. Monitor for issues\n5. Delete if confirmed no longer needed\n\n**What Happens:**\n- Configuration removed from database\n- Transaction type no longer available\n- Transaction code becomes invalid\n\n**Impact Examples:**\n- Delete WITHDRAWAL â†’ No withdrawals possible\n- Delete DEPOSIT â†’ Can't add funds (usually BAD idea!)\n- Delete INTEREST_ACCRUED â†’ No automatic interest\n\n**Related Endpoints:**\n- PUT /api/products/{code}/transactions/{code} - Disable instead of delete\n- GET /api/products/{code}/transactions/{code} - Verify before deletion\n- GET /api/products/{code}/transactions - View remaining transaction types\n"
      operationId: deleteTransaction
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: transactionCode
          in: path
          description: "Transaction code to permanently delete.\n\nâš ï¸\x8F WARNING: This action cannot be undone!\nConsider disabling the transaction instead using PUT endpoint with isActive=false.\n"
          required: true
          schema:
            type: string
          example: TXN_WITHDRAWAL
      responses:
        '204':
          description: Transaction type permanently deleted (no content returned)
        '404':
          description: Transaction configuration or product not found
          content:
            application/json:
              examples:
                Transaction Not Found:
                  description: Transaction Not Found
                  value:
                    error: Resource Not Found
                    message: 'Transaction configuration not found with ID: tx-999e8400-invalid'
                    timestamp: '2025-10-18T10:45:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T10:45:00'
  /api/products/{productCode}/rules/{ruleId}:
    get:
      tags:
        - Product Business Rules
      summary: Retrieve specific business rule details
      description: |
        Get detailed information about a single business rule by its unique identifier.

        **What it returns:**
        - Complete rule configuration
        - Rule name and type
        - Rule expression/logic
        - Priority and error message
        - Active/inactive status
        - Creation and update timestamps

        **Use Cases:**

        **Scenario 1: Rule Validation Before Update**
        - Retrieve current rule configuration
        - Review existing logic
        - Plan modifications
        - Verify rule still exists

        **Scenario 2: Debug Rule Failure**
        - Transaction failed due to rule
        - Retrieve rule details
        - Understand why it failed
        - Check rule expression

        **Scenario 3: Rule Documentation**
        - Export specific rule details
        - Document business logic
        - Create training materials
        - Share with stakeholders

        **Scenario 4: Rule Testing**
        - Get rule expression
        - Test with sample data
        - Verify expected behavior
        - Validate edge cases

        **Related Endpoints:**
        - GET /api/products/{code}/rules - View all rules
        - PUT /api/products/{code}/rules/{id} - Update this rule
        - DELETE /api/products/{code}/rules/{id} - Remove this rule
        - POST /api/products/{code}/rules - Add new rule
      operationId: getRuleByCode
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: ruleId
          in: path
          description: |
            Business rule ID (UUID).

            Unique identifier for the rule.
          required: true
          schema:
            type: string
          example: 991e8400-e29b-41d4-a716-446655440001
      responses:
        '200':
          description: Business rule found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRuleDTO'
              examples:
                Balance Rule Details:
                  summary: Complete minimum balance rule
                  description: Balance Rule Details
                  value:
                    ruleId: 991e8400-e29b-41d4-a716-446655440001
                    ruleName: Minimum Balance Requirement
                    ruleType: VALIDATION
                    ruleExpression: balance >= 100
                    rulePriority: 2
                    errorMessage: Account balance must be at least â‚¹10,000
                    isActive: true
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-03-15T14:20:00'
                Transaction Limit Rule:
                  summary: Daily withdrawal limit details
                  description: Transaction Limit Rule
                  value:
                    ruleId: 993e8400-e29b-41d4-a716-446655440003
                    ruleName: Daily ATM Withdrawal Limit
                    ruleType: TRANSACTION_LIMIT
                    ruleExpression: sum(daily_withdrawals) <= 1000
                    rulePriority: 3
                    errorMessage: Daily withdrawal limit of â‚¹1,00,000 has been exceeded. Please try again tomorrow.
                    isActive: true
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-01-01T00:00:00'
        '404':
          description: Rule or product not found
          content:
            application/json:
              examples:
                Rule Not Found:
                  description: Rule Not Found
                  value:
                    error: Resource Not Found
                    message: 'Business rule not found with ID: 991e8400-e29b-41d4-a716-446655440999'
                    timestamp: '2025-10-15T10:30:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-15T10:30:00'
    put:
      tags:
        - Product Business Rules
      summary: Update business rule configuration
      description: |
        Modify an existing business rule's configuration, logic, or settings.

        **What you can update:**
        - Rule name and type
        - Rule expression/logic
        - Priority order
        - Error message text
        - Active/inactive status

        **Update Scenarios:**

        **Scenario 1: Adjust Rule Limits**
        Update thresholds when business requirements change:
        - Increase minimum balance requirement
        - Modify daily transaction limits
        - Change withdrawal amounts
        - Update age restrictions

        **Scenario 2: Modify Error Messages**
        Improve customer communication:
        - Make messages more customer-friendly
        - Add help information
        - Translate to different languages
        - Include contact details

        **Scenario 3: Change Rule Priority**
        Adjust execution order:
        - Critical rules first
        - Group related rules
        - Optimize performance
        - Handle dependencies

        **Scenario 4: Temporarily Disable Rule**
        Suspend rule without deletion:
        - Set isActive to false
        - Keep rule configuration
        - Maintain audit history
        - Easy re-activation

        **Best Practices:**
        - Test rule logic before updating
        - Update during low-traffic periods
        - Communicate changes to users
        - Keep audit trail of changes
        - Verify no conflicts with other rules

        **Warning:**
        Changes to rule expressions affect all future validations immediately.
        Test thoroughly before updating critical rules.

        **Related Endpoints:**
        - GET /api/products/{code}/rules/{id} - View current configuration
        - DELETE /api/products/{code}/rules/{id} - Remove rule
        - GET /api/products/{code}/rules - View all rules
      operationId: updateRule
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: ruleId
          in: path
          description: Business rule ID (UUID) to update
          required: true
          schema:
            type: string
          example: 991e8400-e29b-41d4-a716-446655440001
      requestBody:
        description: |
          Updated rule configuration.

          Any omitted fields will retain their current values.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRuleRequestDTO'
            examples:
              Increase Balance Requirement:
                summary: Update minimum balance from â‚¹10,000 to â‚¹50,000
                description: Increase Balance Requirement
                value:
                  ruleName: Minimum Balance Requirement
                  ruleType: VALIDATION
                  ruleExpression: balance >= 500
                  rulePriority: 2
                  errorMessage: Account balance must be at least â‚¹50,000 to avoid monthly fees
                  isActive: true
              Disable Rule:
                summary: Temporarily suspend rule without deletion
                description: Disable Rule
                value:
                  ruleName: Daily ATM Withdrawal Limit
                  ruleType: TRANSACTION_LIMIT
                  ruleExpression: sum(daily_withdrawals) <= 1000
                  rulePriority: 3
                  errorMessage: Daily withdrawal limit of â‚¹1,00,000 has been exceeded.
                  isActive: false
        required: true
      responses:
        '200':
          description: Rule updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRuleDTO'
              examples:
                Updated Balance Rule:
                  summary: Increased minimum balance requirement
                  description: Updated Balance Rule
                  value:
                    ruleId: 991e8400-e29b-41d4-a716-446655440001
                    ruleName: Minimum Balance Requirement
                    ruleType: VALIDATION
                    ruleExpression: balance >= 500
                    rulePriority: 2
                    errorMessage: Account balance must be at least â‚¹50,000 to avoid monthly fees
                    isActive: true
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-10-15T14:30:00'
                Disabled Transaction Rule:
                  summary: Temporarily suspended withdrawal limit
                  description: Disabled Transaction Rule
                  value:
                    ruleId: 993e8400-e29b-41d4-a716-446655440003
                    ruleName: Daily ATM Withdrawal Limit
                    ruleType: TRANSACTION_LIMIT
                    ruleExpression: sum(daily_withdrawals) <= 1000
                    rulePriority: 3
                    errorMessage: Daily withdrawal limit of â‚¹1,00,000 has been exceeded.
                    isActive: false
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-10-15T14:35:00'
        '400':
          description: Invalid rule data or validation error
          content:
            application/json:
              examples:
                Invalid Expression:
                  description: Invalid Expression
                  value:
                    error: Validation Error
                    message: 'Invalid rule expression syntax: balance >= [missing value]'
                    timestamp: '2025-10-15T14:30:00'
                Duplicate Rule Name:
                  description: Duplicate Rule Name
                  value:
                    error: Validation Error
                    message: Rule with name 'Minimum Balance Requirement' already exists for this product
                    timestamp: '2025-10-15T14:30:00'
        '404':
          description: Rule or product not found
          content:
            application/json:
              examples:
                Rule Not Found:
                  description: Rule Not Found
                  value:
                    error: Resource Not Found
                    message: 'Business rule not found with ID: 991e8400-e29b-41d4-a716-446655440999'
                    timestamp: '2025-10-15T14:30:00'
    delete:
      tags:
        - Product Business Rules
      summary: Permanently remove business rule
      description: "Delete a business rule from the product configuration.\n\n**âš ï¸\x8F CRITICAL WARNING:**\nThis action is PERMANENT and IRREVERSIBLE!\n- Rule configuration will be lost\n- Cannot be recovered\n- Affects all future validations\n- No undo functionality\n\n**Before Deleting:**\n1. **Verify Impact:** Check if rule is actively used\n2. **Document Reason:** Keep audit trail why rule was removed\n3. **Consider Disable:** Set isActive=false instead of deleting\n4. **Test Impact:** Verify no critical dependencies\n5. **Notify Stakeholders:** Inform affected parties\n\n**When to DELETE:**\n- Rule is completely obsolete\n- Business logic permanently changed\n- Rule was created by mistake\n- Product being decommissioned\n- Duplicate rule cleanup\n\n**When to DISABLE (Recommended Alternative):**\n- Temporary suspension needed\n- Testing new logic\n- Seasonal rules (may reactivate)\n- Uncertain if rule still needed\n- Want to preserve history\n\n**Use PATCH /api/products/{code}/rules/{id} to disable:**\n```\n{\n  \"isActive\": false\n}\n```\n\n**Recommended Workflow:**\n1. Get rule details (verify it's correct rule)\n2. Document deletion reason\n3. Disable rule first (test impact)\n4. Monitor for 30 days\n5. Delete if no issues arise\n\n**What Happens:**\n- Rule removed from database\n- No longer enforced on transactions\n- Future validations won't check this rule\n- Existing accounts/transactions unaffected\n- Rule ID becomes invalid\n\n**Related Endpoints:**\n- PUT /api/products/{code}/rules/{id} - Disable instead of delete\n- GET /api/products/{code}/rules/{id} - Verify before deletion\n- GET /api/products/{code}/rules - View remaining rules\n"
      operationId: deleteRule
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: ruleId
          in: path
          description: "Business rule ID (UUID) to permanently delete.\n\nâš ï¸\x8F WARNING: This action cannot be undone!\nConsider disabling the rule instead using PUT endpoint with isActive=false.\n"
          required: true
          schema:
            type: string
          example: 991e8400-e29b-41d4-a716-446655440001
      responses:
        '204':
          description: Rule permanently deleted (no content returned)
        '404':
          description: Rule or product not found
          content:
            application/json:
              examples:
                Rule Not Found:
                  description: Rule Not Found
                  value:
                    error: Resource Not Found
                    message: 'Business rule not found with ID: 991e8400-e29b-41d4-a716-446655440999'
                    timestamp: '2025-10-15T14:45:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-15T14:45:00'
  /api/products/{productCode}/roles/{roleId}:
    get:
      tags:
        - Product Roles & Permissions
      summary: Retrieve specific role configuration details
      description: |
        Get detailed configuration for a single user role including all permissions and restrictions.

        **What You Get:**
        Complete role configuration:
        - Role name and description
        - Full permission list
        - Transaction limits
        - Approval requirements
        - Active/inactive status
        - Creation and modification history

        **Use Cases:**

        **Scenario 1: Permission Verification**
        User asks "What can I do with this account?":
        - Retrieve their assigned role
        - Show specific permissions
        - Explain transaction limits
        - Clarify restrictions

        **Scenario 2: Before Modifying Role**
        Review current configuration:
        - Check existing permissions
        - Verify transaction limits
        - Plan permission updates
        - Avoid unintended changes

        **Scenario 3: Access Dispute Resolution**
        User reports unexpected access denial:
        - Check assigned role
        - Verify permission settings
        - Compare with expected access
        - Identify configuration issues

        **Scenario 4: Role Documentation**
        Create detailed documentation:
        - Export role specifications
        - Document permission levels
        - Create training materials
        - Support integration testing

        **Related Endpoints:**
        - GET /api/products/{code}/roles - View all role configurations
        - PUT /api/products/{code}/roles/{id} - Update role permissions
        - DELETE /api/products/{code}/roles/{id} - Remove role access
      operationId: getRoleByCode
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: roleId
          in: path
          description: |
            Role configuration ID (UUID).

            Unique identifier for the role configuration.
          required: true
          schema:
            type: string
          example: role-991e8400-e29b-41d4-a716-446655440001
      responses:
        '200':
          description: Role configuration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRoleDTO'
              examples:
                Primary Owner Details:
                  summary: Full control role configuration
                  description: Primary Owner Details
                  value:
                    roleId: role-991e8400-e29b-41d4-a716-446655440001
                    roleName: PRIMARY_OWNER
                    roleDescription: Primary account holder with full control
                    permissions:
                      - VIEW
                      - TRANSACT
                      - MODIFY
                      - CLOSE
                    transactionLimit: null
                    requiresApproval: false
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-01-15T10:00:00'
                Authorized User Details:
                  summary: Limited permissions with approval
                  description: Authorized User Details
                  value:
                    roleId: role-992e8400-e29b-41d4-a716-446655440002
                    roleName: AUTHORIZED_USER
                    roleDescription: Can perform transactions with daily limits and approval requirements
                    permissions:
                      - VIEW
                      - TRANSACT
                    transactionLimit: 10000
                    requiresApproval: true
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-03-20T14:30:00'
        '404':
          description: Role configuration or product not found
          content:
            application/json:
              examples:
                Role Not Found:
                  description: Role Not Found
                  value:
                    error: Resource Not Found
                    message: 'Role configuration not found with ID: role-999e8400-invalid'
                    timestamp: '2025-10-18T11:00:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T11:00:00'
    put:
      tags:
        - Product Roles & Permissions
      summary: Update role permissions and configuration
      description: |
        Modify an existing role's permissions, limits, and settings for product access control.

        **What You Can Update:**
        - Role description
        - Permission list
        - Transaction limits
        - Approval requirements
        - Active/inactive status

        **Update Scenarios:**

        **Scenario 1: Expand Permissions**
        Grant additional access rights:
        - Add MODIFY permission to VIEW_ONLY role
        - Enable transaction rights
        - Upgrade authorized user capabilities
        - Immediate effect on all users with this role

        **Scenario 2: Restrict Permissions**
        Tighten security controls:
        - Remove CLOSE permission
        - Reduce transaction limits
        - Add approval requirements
        - Prevent unauthorized actions

        **Scenario 3: Adjust Transaction Limits**
        Modify spending controls:
        - Increase limit for trusted users
        - Decrease limit due to fraud concerns
        - Remove limit (set to null)
        - Add new limit to unlimited role

        **Scenario 4: Enable Approval Workflow**
        Add oversight requirements:
        - Set requiresApproval to true
        - Transactions need secondary approval
        - Enhance compliance controls
        - Reduce fraud risk

        **Scenario 5: Temporarily Disable Role**
        Suspend without deletion:
        - Set isActive to false
        - Keep configuration intact
        - No permanent removal
        - Easy re-activation

        **Best Practices:**
        - Test changes in staging environment
        - Notify affected users of permission changes
        - Update during low-traffic periods
        - Document reason for changes
        - Monitor for unexpected access issues
        - Keep audit trail of modifications

        **Warning:**
        Permission changes take effect immediately for all users assigned this role.
        Reducing permissions may interrupt active user sessions.

        **Related Endpoints:**
        - GET /api/products/{code}/roles/{id} - View current configuration
        - DELETE /api/products/{code}/roles/{id} - Remove role
        - GET /api/products/{code}/roles - View all roles
      operationId: updateRole
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: roleId
          in: path
          description: Role configuration ID (UUID) to update
          required: true
          schema:
            type: string
          example: role-991e8400-e29b-41d4-a716-446655440001
      requestBody:
        description: |
          Updated role configuration.

          Any omitted fields will retain their current values.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRoleRequestDTO'
            examples:
              Expand Permissions:
                summary: Add transaction rights to view-only role
                description: Expand Permissions
                value:
                  roleName: AUTHORIZED_USER
                  roleDescription: Upgraded from view-only to transaction rights
                  permissions:
                    - VIEW
                    - TRANSACT
                  transactionLimit: 5000
                  requiresApproval: false
                  isActive: true
              Add Approval Workflow:
                summary: Require approval for transactions
                description: Add Approval Workflow
                value:
                  roleName: AUTHORIZED_USER
                  roleDescription: Finance manager with mandatory approval for large transactions
                  permissions:
                    - VIEW
                    - TRANSACT
                  transactionLimit: 50000
                  requiresApproval: true
                  isActive: true
        required: true
      responses:
        '200':
          description: Role configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRoleDTO'
              examples:
                Expanded Permissions:
                  summary: Upgraded view-only to transaction rights
                  description: Expanded Permissions
                  value:
                    roleId: role-993e8400-e29b-41d4-a716-446655440003
                    roleName: AUTHORIZED_USER
                    roleDescription: Upgraded from view-only to transaction rights
                    permissions:
                      - VIEW
                      - TRANSACT
                    transactionLimit: 5000
                    requiresApproval: false
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-10-18T11:30:00'
                Added Approval Requirement:
                  summary: Enhanced security with approval workflow
                  description: Added Approval Requirement
                  value:
                    roleId: role-992e8400-e29b-41d4-a716-446655440002
                    roleName: AUTHORIZED_USER
                    roleDescription: Finance manager with mandatory approval for large transactions
                    permissions:
                      - VIEW
                      - TRANSACT
                    transactionLimit: 50000
                    requiresApproval: true
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-10-18T11:30:00'
        '400':
          description: Invalid role configuration
          content:
            application/json:
              examples:
                Invalid Permission:
                  description: Invalid Permission
                  value:
                    error: Validation Error
                    message: 'Invalid permission: INVALID_PERM. Allowed: VIEW, TRANSACT, MODIFY, CLOSE'
                    timestamp: '2025-10-18T11:30:00'
                Negative Transaction Limit:
                  description: Negative Transaction Limit
                  value:
                    error: Validation Error
                    message: Transaction limit must be positive or null for unlimited
                    timestamp: '2025-10-18T11:30:00'
        '404':
          description: Role configuration or product not found
          content:
            application/json:
              examples:
                Role Not Found:
                  description: Role Not Found
                  value:
                    error: Resource Not Found
                    message: 'Role configuration not found with ID: role-999e8400-invalid'
                    timestamp: '2025-10-18T11:30:00'
    delete:
      tags:
        - Product Roles & Permissions
      summary: Permanently remove role configuration from product
      description: "Delete a role configuration, removing access capability for this role type.\n\n**âš ï¸\x8F CRITICAL WARNING:**\nThis action is PERMANENT and IRREVERSIBLE!\n- Role configuration will be lost forever\n- Users assigned this role will lose access\n- Cannot be recovered\n- May disrupt active user sessions\n- No undo functionality\n\n**Before Deleting:**\n1. **Check User Assignments:** Verify no users currently have this role\n2. **Impact Assessment:** Understand who will be affected\n3. **Communication Plan:** Notify affected users in advance\n4. **Alternative Access:** Provide alternative role assignments\n5. **Document Reason:** Keep audit trail of why role was removed\n6. **Consider Disable:** Set isActive=false instead of deleting\n\n**When to DELETE:**\n- Role type permanently discontinued\n- Simplifying role structure\n- No users assigned to this role\n- Product being decommissioned\n- Duplicate role cleanup\n- Test/development role removal\n\n**When to DISABLE (Recommended Alternative):**\n- Temporary suspension needed\n- Want to preserve configuration\n- Users might need role later\n- Testing new access structure\n- Uncertain about permanent removal\n- Regulatory compliance requires history\n\n**Use PUT /api/products/{code}/roles/{id} to disable:**\n```\n{\n  \"isActive\": false\n}\n```\n\n**Recommended Workflow:**\n1. Get role details (verify correct role)\n2. Check user assignments\n3. Notify affected users (30-day notice)\n4. Migrate users to alternative roles\n5. Disable role first (test impact)\n6. Monitor for 30 days\n7. Delete if no issues arise\n\n**What Happens:**\n- Role removed from database\n- Role type no longer available\n- Users with this role lose access immediately\n- New assignments impossible\n- Role ID becomes invalid\n- Historical data remains but role reference broken\n\n**Impact Examples:**\n- Delete PRIMARY_OWNER â†’ Accounts become orphaned (DANGEROUS!)\n- Delete VIEW_ONLY â†’ Read-only users lose access\n- Delete AUTHORIZED_USER â†’ Transaction permissions revoked\n\n**Dangerous Deletions:**\n- PRIMARY_OWNER (critical for account ownership)\n- CO_OWNER (joint account management)\n- Any role with active user assignments\n\n**Related Endpoints:**\n- PUT /api/products/{code}/roles/{id} - Disable instead of delete\n- GET /api/products/{code}/roles/{id} - Verify before deletion\n- GET /api/products/{code}/roles - View remaining roles\n"
      operationId: deleteRole
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: roleId
          in: path
          description: "Role configuration ID (UUID) to permanently delete.\n\nâš ï¸\x8F WARNING: This action cannot be undone!\nUsers with this role will immediately lose access.\nConsider disabling the role instead using PUT endpoint with isActive=false.\n"
          required: true
          schema:
            type: string
          example: role-991e8400-e29b-41d4-a716-446655440001
      responses:
        '204':
          description: Role permanently deleted (no content returned)
        '404':
          description: Role configuration or product not found
          content:
            application/json:
              examples:
                Role Not Found:
                  description: Role Not Found
                  value:
                    error: Resource Not Found
                    message: 'Role configuration not found with ID: role-999e8400-invalid'
                    timestamp: '2025-10-18T11:45:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T11:45:00'
  /api/products/{productCode}/interest-rates/{interestId}:
    get:
      tags:
        - Product Interest Rates
      summary: Retrieve a specific interest rate tier
      description: |
        Get detailed information about a single interest rate tier by its unique identifier.

        **What it returns:**
        - Complete tier configuration
        - Balance range (min/max)
        - Interest rate percentage
        - Tier name and description
        - Active/inactive status
        - Audit timestamps

        **Use Cases:**

        **Scenario 1: Verify Rate Configuration**
        - Admin reviewing specific tier details
        - Confirm rate matches rate sheet
        - Verify balance range correctness

        **Scenario 2: Rate Quote Calculation**
        - Identify which tier applies to customer
        - Retrieve exact rate for quote
        - Calculate projected interest earnings

        **Scenario 3: Before Update Operations**
        - Retrieve current values before modification
        - Compare with proposed changes
        - Validate tier still exists

        **Related Endpoints:**
        - GET /api/products/{code}/interest-rates - List all tiers
        - PUT /api/products/{code}/interest-rates/{id} - Update this tier
        - DELETE /api/products/{code}/interest-rates/{id} - Remove this tier
      operationId: getInterestRateByCode
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: interestId
          in: path
          description: Interest rate tier ID (UUID)
          required: true
          schema:
            type: string
          example: 661e8400-e29b-41d4-a716-446655440001
      responses:
        '200':
          description: Interest rate tier found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterestDTO'
              example:
                interestId: 661e8400-e29b-41d4-a716-446655440001
                tierName: Tier 2 - Silver
                minBalance: 10000.01
                maxBalance: 50000
                interestRate: 4
                isActive: true
                createdAt: '2025-01-01T00:00:00'
                updatedAt: '2025-03-15T14:20:00'
        '404':
          description: Interest rate tier or product not found
          content:
            application/json:
              examples:
                Tier Not Found:
                  description: Tier Not Found
                  value:
                    error: Resource Not Found
                    message: 'Interest rate tier not found with ID: 661e8400-e29b-41d4-a716-446655440999'
                    timestamp: '2025-10-15T10:30:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-15T10:30:00'
    put:
      tags:
        - Product Interest Rates
      summary: Update an interest rate tier configuration
      description: |
        Modify an existing interest rate tier. Update rate percentages, balance ranges, or tier status.

        **What can be updated:**
        - Interest rate percentage
        - Balance range (min/max)
        - Tier name/description
        - Active/inactive status

        **Common Update Scenarios:**

        **Scenario 1: Rate Adjustment**
        - Market conditions change
        - Adjust rate from 3.5% to 4.0%
        - Remain competitive with market

        **Scenario 2: Balance Range Modification**
        - Expand/contract tier coverage
        - Adjust min/max thresholds
        - Ensure no gaps/overlaps with other tiers

        **Scenario 3: Tier Deactivation**
        - Temporarily disable promotional tier
        - Set isActive = false
        - Preserve configuration for potential reactivation

        **Scenario 4: Tier Rename**
        - Rebrand tier names
        - "Tier 1" â†’ "Bronze Level"
        - Improve marketing clarity

        **Important Notes:**
        - Cannot change tier ID (immutable)
        - Validate new range doesn't overlap with other tiers
        - Rate changes apply to future calculations only
        - Existing accounts continue with their locked-in rates
        - Consider effective date for rate changes

        **Related Endpoints:**
        - GET /api/products/{code}/interest-rates/{id} - View current tier
        - GET /api/products/{code}/interest-rates - View all tiers
        - DELETE /api/products/{code}/interest-rates/{id} - Remove tier
      operationId: updateInterestRate
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: interestId
          in: path
          description: Interest rate tier ID to update
          required: true
          schema:
            type: string
          example: 661e8400-e29b-41d4-a716-446655440001
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInterestRequestDTO'
        required: true
      responses:
        '200':
          description: Interest rate tier updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterestDTO'
              examples:
                Rate Increase:
                  summary: Increased tier rate from 3.5% to 4.0%
                  description: Rate Increase
                  value:
                    interestId: 661e8400-e29b-41d4-a716-446655440001
                    tierName: Tier 1 - Base
                    minBalance: 0
                    maxBalance: 10000
                    interestRate: 4
                    isActive: true
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-10-15T10:30:00'
                Tier Deactivation:
                  summary: Disabled promotional tier
                  description: Tier Deactivation
                  value:
                    interestId: 664e8400-e29b-41d4-a716-446655440004
                    tierName: Promotional - New Customers
                    minBalance: 0
                    maxBalance: 5000
                    interestRate: 5
                    isActive: false
                    createdAt: '2025-01-01T00:00:00'
                    updatedAt: '2025-10-15T10:30:00'
        '400':
          description: Invalid update data
          content:
            application/json:
              examples:
                Invalid Balance Range:
                  description: Invalid Balance Range
                  value:
                    error: Validation Failed
                    message: minBalance (15000) cannot be greater than maxBalance (10000)
                    timestamp: '2025-10-15T10:30:00'
                Range Overlap:
                  description: Range Overlap
                  value:
                    error: Conflict
                    message: Updated balance range â‚¹8,00,000 - â‚¹25,00,000 overlaps with Tier 2 (â‚¹10,00,000 - â‚¹50,00,000)
                    timestamp: '2025-10-15T10:30:00'
        '404':
          description: Interest rate tier or product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Interest rate tier not found with ID: 661e8400-e29b-41d4-a716-446655440999'
                timestamp: '2025-10-15T10:30:00'
    delete:
      tags:
        - Product Interest Rates
      summary: Delete an interest rate tier (permanent removal)
      description: "Permanently remove an interest rate tier from a product's rate structure.\n\n**âš ï¸\x8F WARNING: This operation is IRREVERSIBLE**\n\n**What gets deleted:**\n- The interest rate tier configuration\n- Balance range definition\n- Rate percentage setting\n\n**What is NOT affected:**\n- Existing customer accounts (continue with locked-in rates)\n- Historical interest calculations\n- Audit trail of past transactions\n\n**When to Delete:**\n- Incorrectly created tier (duplicate or error)\n- Restructuring rate tiers completely\n- Removing outdated promotional tiers\n- Test data cleanup\n\n**Recommended Alternative:**\nInstead of deletion, consider:\n1. Set isActive = false using PUT endpoint\n2. Preserves configuration and history\n3. Can be reactivated if needed\n4. Maintains audit trail\n\n**Common Use Cases:**\n\n**Scenario 1: Rate Structure Simplification**\n- Originally had 5 tiers\n- Simplifying to 3 tiers\n- Delete unnecessary intermediate tiers\n\n**Scenario 2: Promotional Tier Removal**\n- Limited-time promotional rate ended\n- Rate no longer offered\n- Remove promotional tier configuration\n\n**Scenario 3: Duplicate Cleanup**\n- Accidentally created duplicate tier\n- Remove the duplicate\n- Keep correct configuration\n\n**â\x9DŒ WRONG USE CASES:**\n- Temporarily disabling a tier â†’ Use isActive=false\n- Rate change â†’ Use PUT to update rate\n- End of promotion â†’ Use isActive=false\n\n**Important Validation:**\n- Verify this won't leave gaps in coverage\n- Ensure remaining tiers cover full balance range\n- Check if any accounts are currently using this tier\n- Document reason for deletion\n\n**Related Endpoints:**\n- PUT /api/products/{code}/interest-rates/{id} - Update tier (preferred)\n- GET /api/products/{code}/interest-rates - View remaining tiers\n- POST /api/products/{code}/interest-rates - Add replacement tier\n"
      operationId: deleteInterestRate
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: interestId
          in: path
          description: "Interest rate tier ID to permanently delete.\n\nâš ï¸\x8F WARNING: This cannot be undone!\n\nConsider using PUT with isActive=false instead.\n"
          required: true
          schema:
            type: string
          example: 661e8400-e29b-41d4-a716-446655440001
      responses:
        '204':
          description: Interest rate tier deleted successfully. No content returned.
        '404':
          description: Interest rate tier or product not found
          content:
            application/json:
              examples:
                Tier Not Found:
                  description: Tier Not Found
                  value:
                    error: Resource Not Found
                    message: 'Interest rate tier not found with ID: 661e8400-e29b-41d4-a716-446655440999'
                    timestamp: '2025-10-15T10:30:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-15T10:30:00'
        '409':
          description: 'Cannot delete tier (future: has active accounts)'
          content:
            application/json:
              example:
                error: Conflict
                message: 'Cannot delete tier: 1,234 accounts are currently using this rate tier. Set isActive=false instead.'
                timestamp: '2025-10-15T10:30:00'
                affectedAccounts: 1234
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Failed to delete interest rate tier
                timestamp: '2025-10-15T10:30:00'
  /api/products/{productCode}/communications/{commId}:
    get:
      tags:
        - Product Communication Templates
      summary: Retrieve specific communication template details
      description: |
        Get detailed configuration for a single communication template.

        **What You Get:**
        Complete template configuration:
        - Template name and type
        - Trigger event
        - Communication channels
        - Subject line and message template
        - Personalization variables
        - Frequency limits
        - Active/inactive status
        - Creation and modification history

        **Use Cases:**

        **Scenario 1: Template Review Before Update**
        Verify current configuration:
        - Review existing message template
        - Check trigger conditions
        - Verify channel settings
        - Plan template improvements

        **Scenario 2: Copy Template to Another Product**
        Clone successful templates:
        - Export template configuration
        - Adapt for different product
        - Maintain consistent messaging
        - Accelerate product setup

        **Scenario 3: Troubleshoot Missing Notification**
        Customer didn't receive expected message:
        - Verify template is active
        - Check trigger event configuration
        - Review channel settings
        - Validate message content

        **Scenario 4: Compliance Documentation**
        Audit requires template details:
        - Export exact message content
        - Document delivery channels
        - Show frequency limits
        - Prove regulatory compliance

        **Scenario 5: Content Review**
        Marketing/Legal review needed:
        - Extract message template
        - Review personalization variables
        - Verify brand consistency
        - Check legal disclaimers

        **Related Endpoints:**
        - GET /api/products/{code}/communications - View all templates
        - PUT /api/products/{code}/communications/{id} - Update this template
        - DELETE /api/products/{code}/communications/{id} - Remove template
      operationId: getCommunicationByCode
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: commId
          in: path
          description: |
            Communication template ID (UUID).

            Unique identifier for the template configuration.
          required: true
          schema:
            type: string
          example: comm-991e8400-e29b-41d4-a716-446655440001
      responses:
        '200':
          description: Communication template found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommunicationDTO'
              examples:
                Transaction Alert Template:
                  summary: Complete SMS/Email alert configuration
                  description: Transaction Alert Template
                  value:
                    communicationId: comm-991e8400-e29b-41d4-a716-446655440001
                    communicationName: Large Withdrawal Alert
                    communicationType: ALERT
                    triggerEvent: TRANSACTION_COMPLETE
                    channels:
                      - SMS
                      - EMAIL
                    subject: 'Withdrawal Alert: ${AMOUNT} withdrawn from your account'
                    messageTemplate: Dear ${CUSTOMER_NAME}, ${AMOUNT} was withdrawn from your ${PRODUCT_NAME} account (${ACCOUNT_NUMBER}) on ${DATE}. If you did not authorize this, contact us immediately at 1-800-BANK-HELP.
                    personalizationVariables:
                      - CUSTOMER_NAME
                      - AMOUNT
                      - PRODUCT_NAME
                      - ACCOUNT_NUMBER
                      - DATE
                    frequencyLimit: IMMEDIATE
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-10-18T12:00:00'
                Monthly Statement Template:
                  summary: Email statement with attachment
                  description: Monthly Statement Template
                  value:
                    communicationId: comm-992e8400-e29b-41d4-a716-446655440002
                    communicationName: Monthly Account Statement
                    communicationType: STATEMENT
                    triggerEvent: STATEMENT_READY
                    channels:
                      - EMAIL
                    subject: Your ${PRODUCT_NAME} Statement for ${MONTH}
                    messageTemplate: |-
                      Dear ${CUSTOMER_NAME}, Your monthly statement for ${PRODUCT_NAME} account ending in ${LAST_4_DIGITS} is now available. 

                      Opening Balance: ${OPENING_BALANCE}
                      Total Deposits: ${TOTAL_DEPOSITS}
                      Total Withdrawals: ${TOTAL_WITHDRAWALS}
                      Closing Balance: ${CLOSING_BALANCE}

                      View your complete statement in the attached PDF. For questions, reply to this email or call us at 1-800-BANK-HELP.
                    personalizationVariables:
                      - CUSTOMER_NAME
                      - PRODUCT_NAME
                      - MONTH
                      - LAST_4_DIGITS
                      - OPENING_BALANCE
                      - TOTAL_DEPOSITS
                      - TOTAL_WITHDRAWALS
                      - CLOSING_BALANCE
                    frequencyLimit: MONTHLY
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-01-15T10:00:00'
        '404':
          description: Communication template or product not found
          content:
            application/json:
              examples:
                Template Not Found:
                  description: Template Not Found
                  value:
                    error: Resource Not Found
                    message: 'Communication template not found with ID: comm-999e8400-invalid'
                    timestamp: '2025-10-18T12:00:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T12:00:00'
    put:
      tags:
        - Product Communication Templates
      summary: Update communication template configuration
      description: |
        Modify an existing communication template's content, channels, or settings.

        **What You Can Update:**
        - Template name and description
        - Communication type
        - Trigger event conditions
        - Communication channels
        - Subject line and message template
        - Personalization variables
        - Frequency limits
        - Active/inactive status

        **Update Scenarios:**

        **Scenario 1: Improve Message Content**
        Enhance customer communication:
        - Update message template wording
        - Add more personalization
        - Improve clarity and tone
        - Fix grammar/spelling errors

        **Scenario 2: Add Communication Channel**
        Expand notification reach:
        - Add SMS to email-only template
        - Enable push notifications
        - Add in-app messaging
        - Maintain message consistency

        **Scenario 3: Adjust Frequency**
        Prevent notification fatigue:
        - Change IMMEDIATE to DAILY for low-priority alerts
        - Increase reminder frequency
        - Add daily digest instead of per-event
        - Balance urgency vs spam

        **Scenario 4: Rebrand or Legal Update**
        Corporate changes require updates:
        - Update company name
        - Change support contact info
        - Add legal disclaimers
        - Update privacy statements

        **Scenario 5: A/B Testing**
        Test communication effectiveness:
        - Create variation with different subject
        - Test different message lengths
        - Compare channel effectiveness
        - Optimize based on results

        **Scenario 6: Temporarily Disable Template**
        Pause without deletion:
        - Set isActive to false
        - Keep configuration intact
        - No permanent removal
        - Easy re-activation

        **Best Practices:**
        - Test changes in staging environment
        - Review with legal/compliance team
        - Update during low-traffic periods
        - Notify customer service team
        - Monitor delivery success rates
        - Track customer feedback
        - Maintain version history

        **Warning:**
        Template changes affect all future communications immediately.
        Customers receiving messages during update may see inconsistent content.

        **Related Endpoints:**
        - GET /api/products/{code}/communications/{id} - View current template
        - DELETE /api/products/{code}/communications/{id} - Remove template
        - GET /api/products/{code}/communications - View all templates
      operationId: updateCommunication
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: FD001
        - name: commId
          in: path
          description: Communication template ID (UUID) to update
          required: true
          schema:
            type: string
          example: COMM_OPENING
      requestBody:
        description: |
          Updated communication template configuration.

          Any omitted fields will retain their current values.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCommunicationRequestDTO'
            examples:
              Enhance Message:
                summary: Add personalization and improve tone
                description: Enhance Message
                value:
                  communicationName: Enhanced Withdrawal Alert
                  communicationType: ALERT
                  triggerEvent: TRANSACTION_COMPLETE
                  channels:
                    - SMS
                    - EMAIL
                    - PUSH_NOTIFICATION
                  subject: 'Account Alert: ${AMOUNT} withdrawal at ${LOCATION}'
                  messageTemplate: Hello ${CUSTOMER_FIRST_NAME}! We noticed a withdrawal of ${AMOUNT} from your ${PRODUCT_NAME} (${MASKED_ACCOUNT}) at ${LOCATION} on ${DATE} ${TIME}. Your new balance is ${CURRENT_BALANCE}. Wasn't you? Call us immediately at 1-800-BANK-HELP.
                  frequencyLimit: IMMEDIATE
                  isActive: true
              Add Channels:
                summary: Enable additional notification channels
                description: Add Channels
                value:
                  communicationName: Multi-Channel Statement Notification
                  communicationType: STATEMENT
                  triggerEvent: STATEMENT_READY
                  channels:
                    - EMAIL
                    - SMS
                    - IN_APP
                    - PUSH_NOTIFICATION
                  subject: Your ${MONTH} ${PRODUCT_NAME} Statement is Ready
                  messageTemplate: Hi ${CUSTOMER_FIRST_NAME}, your ${MONTH} statement is now available! View now in our app or check your email.
                  frequencyLimit: MONTHLY
                  isActive: true
        required: true
      responses:
        '200':
          description: Communication template updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommunicationDTO'
              examples:
                Enhanced Message Content:
                  summary: Improved personalization and clarity
                  description: Enhanced Message Content
                  value:
                    communicationId: comm-991e8400-e29b-41d4-a716-446655440001
                    communicationName: Enhanced Withdrawal Alert
                    communicationType: ALERT
                    triggerEvent: TRANSACTION_COMPLETE
                    channels:
                      - SMS
                      - EMAIL
                      - PUSH_NOTIFICATION
                    subject: 'Account Alert: ${AMOUNT} withdrawal at ${LOCATION}'
                    messageTemplate: Hello ${CUSTOMER_FIRST_NAME}! We noticed a withdrawal of ${AMOUNT} from your ${PRODUCT_NAME} (${MASKED_ACCOUNT}) at ${LOCATION} on ${DATE} ${TIME}. Your new balance is ${CURRENT_BALANCE}. Wasn't you? Call us immediately at 1-800-BANK-HELP. Stay secure! - Your ${BANK_NAME} Team
                    frequencyLimit: IMMEDIATE
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-10-18T12:30:00'
                Added Multi-Channel Support:
                  summary: Expanded from email-only to multi-channel
                  description: Added Multi-Channel Support
                  value:
                    communicationId: comm-992e8400-e29b-41d4-a716-446655440002
                    communicationName: Multi-Channel Statement Notification
                    communicationType: STATEMENT
                    triggerEvent: STATEMENT_READY
                    channels:
                      - EMAIL
                      - SMS
                      - IN_APP
                      - PUSH_NOTIFICATION
                    subject: Your ${MONTH} ${PRODUCT_NAME} Statement is Ready
                    messageTemplate: Hi ${CUSTOMER_FIRST_NAME}, your ${MONTH} statement is now available! Check your account activity, balances, and more. View now in our app or check your email for the PDF version.
                    frequencyLimit: MONTHLY
                    isActive: true
                    createdAt: '2025-01-15T10:00:00'
                    updatedAt: '2025-10-18T12:30:00'
        '400':
          description: Invalid communication template configuration
          content:
            application/json:
              examples:
                Invalid Trigger Event:
                  description: Invalid Trigger Event
                  value:
                    error: Validation Error
                    message: 'Invalid trigger event: INVALID_EVENT. Allowed events: ACCOUNT_OPENING, TRANSACTION_COMPLETE, BALANCE_LOW, etc.'
                    timestamp: '2025-10-18T12:30:00'
                Missing Personalization Variable:
                  description: Missing Personalization Variable
                  value:
                    error: Validation Error
                    message: 'Message template uses undefined variable: ${UNDEFINED_VAR}'
                    timestamp: '2025-10-18T12:30:00'
        '404':
          description: Communication template or product not found
          content:
            application/json:
              examples:
                Template Not Found:
                  description: Template Not Found
                  value:
                    error: Resource Not Found
                    message: 'Communication template not found with ID: comm-999e8400-invalid'
                    timestamp: '2025-10-18T12:30:00'
    delete:
      tags:
        - Product Communication Templates
      summary: Permanently remove communication template
      description: "Delete a communication template, stopping all automated notifications for this event.\n\n**âš ï¸\x8F CRITICAL WARNING:**\nThis action is PERMANENT and IRREVERSIBLE!\n- Template configuration will be lost forever\n- Customers will stop receiving these notifications\n- Cannot be recovered\n- No undo functionality\n- May violate regulatory requirements\n\n**Before Deleting:**\n1. **Regulatory Check:** Verify not legally required (statements, disclosures)\n2. **Impact Assessment:** Understand who will be affected\n3. **Customer Communication:** Consider notifying customers of change\n4. **Alternative Solutions:** Check if disabling is better option\n5. **Document Reason:** Keep audit trail of why template was removed\n6. **Test Impact:** Verify in staging environment first\n\n**When to DELETE:**\n- Template permanently obsolete\n- Product being decommissioned\n- Duplicate template cleanup\n- Test/development template removal\n- Campaign-specific template ended\n- Template never used\n\n**When to DISABLE (Recommended Alternative):**\n- Temporary suspension needed\n- Want to preserve configuration\n- Seasonal or campaign-based\n- Testing new approach\n- Uncertain about permanent removal\n- Compliance requires history\n- May reactivate later\n\n**Use PUT /api/products/{code}/communications/{id} to disable:**\n```\n{\n  \"isActive\": false\n}\n```\n\n**Recommended Workflow:**\n1. Get template details (verify correct template)\n2. Check if legally required\n3. Document deletion reason\n4. Notify stakeholders (30-day notice)\n5. Disable template first (test impact)\n6. Monitor customer feedback for 30 days\n7. Delete if no issues or complaints\n\n**What Happens:**\n- Template removed from database\n- No more notifications sent\n- Scheduled communications cancelled\n- Template ID becomes invalid\n- Historical messages remain\n- No future reference possible\n\n**Impact Examples:**\n- Delete STATEMENT template â†’ Customers miss monthly statements (REGULATORY ISSUE!)\n- Delete TRANSACTION_ALERT â†’ No fraud detection notifications (SECURITY RISK!)\n- Delete PAYMENT_REMINDER â†’ Customers miss due dates (CUSTOMER HARM!)\n- Delete PROMOTIONAL â†’ Marketing campaign stops (OK if campaign ended)\n\n**Dangerous Deletions (DO NOT DELETE):**\n- **REGULATORY/COMPLIANCE** templates (statements, disclosures, privacy notices)\n- **SECURITY** alerts (fraud, suspicious activity)\n- **CRITICAL** notifications (payment due, overdraft, balance low)\n- **TRANSACTIONAL** confirmations (legally required receipts)\n\n**Safe Deletions:**\n- Promotional campaigns (ended)\n- Seasonal greetings\n- Test templates\n- Duplicate templates\n- Unused templates\n\n**Related Endpoints:**\n- PUT /api/products/{code}/communications/{id} - Disable instead of delete\n- GET /api/products/{code}/communications/{id} - Verify before deletion\n- GET /api/products/{code}/communications - View remaining templates\n"
      operationId: deleteCommunication
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: commId
          in: path
          description: "Communication template ID (UUID) to permanently delete.\n\nâš ï¸\x8F WARNING: This action cannot be undone!\nCustomers will stop receiving these notifications immediately.\nVerify template is not legally required (regulatory/compliance).\nConsider disabling the template instead using PUT endpoint with isActive=false.\n"
          required: true
          schema:
            type: string
          example: comm-991e8400-e29b-41d4-a716-446655440001
      responses:
        '204':
          description: Communication template permanently deleted (no content returned)
        '404':
          description: Communication template or product not found
          content:
            application/json:
              examples:
                Template Not Found:
                  description: Template Not Found
                  value:
                    error: Resource Not Found
                    message: 'Communication template not found with ID: comm-999e8400-invalid'
                    timestamp: '2025-10-18T12:45:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T12:45:00'
  /api/products/{productCode}/charges/{chargeId}:
    get:
      tags:
        - Product Charges & Fees
      summary: Retrieve specific charge details
      description: |
        Get detailed information about a specific fee or charge.

        **Use Cases:**
        - Verify charge configuration
        - Review charge details before update
        - Check charge amount and frequency
      operationId: getChargeByCode
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
        - name: chargeId
          in: path
          description: Charge ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Charge found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductChargeDTO'
              example:
                chargeId: 771e8400-e29b-41d4-a716-446655440001
                chargeName: Minimum Balance Fee
                chargeType: FLAT
                chargeAmount: 5
                chargeFrequency: MONTHLY
                isActive: true
                createdAt: '2025-01-01T00:00:00'
        '404':
          description: Charge or product not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductChargeDTO'
    put:
      tags:
        - Product Charges & Fees
      summary: Update fee or charge configuration
      description: |
        Modify an existing charge's amount, type, frequency, or status.

        **Common Updates:**
        - Adjust fee amount (rate changes)
        - Change frequency (monthly to quarterly)
        - Disable charge (set isActive=false)
        - Modify charge type

        **Use Cases:**
        - Market-based fee adjustments
        - Promotional fee waivers
        - Regulatory compliance changes
      operationId: updateCharge
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
        - name: chargeId
          in: path
          description: Charge ID to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductChargeRequestDTO'
        required: true
      responses:
        '200':
          description: Charge updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductChargeDTO'
              example:
                chargeId: 771e8400-e29b-41d4-a716-446655440001
                chargeName: Minimum Balance Fee
                chargeType: FLAT
                chargeAmount: 7
                chargeFrequency: MONTHLY
                isActive: true
                updatedAt: '2025-10-15T10:30:00'
        '400':
          description: Invalid charge data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductChargeDTO'
        '404':
          description: Charge or product not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductChargeDTO'
    delete:
      tags:
        - Product Charges & Fees
      summary: Remove charge from product (permanent)
      description: "Permanently delete a fee or charge from product configuration.\n\n**âš ï¸\x8F WARNING: Irreversible operation**\n\n**Recommended Alternative:**\n- Set isActive=false using PUT endpoint\n- Preserves configuration and history\n- Can be reactivated if needed\n\n**When to Delete:**\n- Incorrectly configured charge\n- Duplicate charges\n- Test data cleanup\n\n**Use Cases:**\n- Remove obsolete fees\n- Clean up incorrect configuration\n- Simplify fee structure\n"
      operationId: deleteCharge
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
        - name: chargeId
          in: path
          description: "Charge ID to delete (âš ï¸\x8F Cannot be undone!)"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Charge deleted successfully
        '404':
          description: Charge or product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Charge not found with ID: 771e8400-invalid'
                timestamp: '2025-10-15T10:30:00'
  /api/products/{productCode}/balances/{balanceType}:
    get:
      tags:
        - Product Balance Types
      summary: Retrieve specific balance type configuration
      description: |
        Get details of a specific balance type if it's configured for this product.

        **What it returns:**
        - Balance type identifier (enum value)
        - Active/inactive status
        - Balance ID (UUID)
        - Configuration timestamp

        **Use Cases:**

        **Scenario 1: Verify Balance Type Exists**
        - Check if product supports specific balance
        - Validate before creating account
        - Confirm balance type configuration

        **Scenario 2: Get Balance Type Details**
        - Retrieve balance configuration
        - Check active status
        - View creation timestamp

        **Scenario 3: Before Update Operations**
        - Get current configuration
        - Verify balance type still exists
        - Prepare for modifications

        **Related Endpoints:**
        - GET /api/products/{code}/balances - View all types
        - PUT /api/products/{code}/balances/{type} - Update this type
        - DELETE /api/products/{code}/balances/{type} - Remove this type
      operationId: getBalanceByType
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: LOAN-PERSONAL-5Y
        - name: balanceType
          in: path
          description: |
            Balance type to retrieve.

            Valid values:
            - LOAN_PRINCIPAL
            - LOAN_INTEREST
            - FD_PRINCIPAL
            - FD_INTEREST
            - OVERDRAFT
            - PENALTY
          required: true
          schema:
            type: string
          example: LOAN_PRINCIPAL
      responses:
        '200':
          description: Balance type found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBalanceDTO'
              example:
                balanceId: 881e8400-e29b-41d4-a716-446655440001
                balanceType: LOAN_PRINCIPAL
                isActive: true
                createdAt: '2025-01-01T00:00:00'
        '404':
          description: Balance type or product not found
          content:
            application/json:
              examples:
                Balance Type Not Configured:
                  description: Balance Type Not Configured
                  value:
                    error: Resource Not Found
                    message: Balance type OVERDRAFT not configured for product LOAN-PERSONAL-5Y
                    timestamp: '2025-10-15T10:30:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: LOAN-INVALID-2025'
                    timestamp: '2025-10-15T10:30:00'
    put:
      tags:
        - Product Balance Types
      summary: Update balance type configuration
      description: |
        Modify the configuration of an existing balance type for this product.

        **What can be updated:**
        - Balance type (change to different type)
        - Active/inactive status

        **Common Update Scenarios:**

        **Scenario 1: Disable Balance Type**
        - Temporarily disable without removing
        - Set isActive = false
        - Preserve configuration for reactivation

        **Scenario 2: Enable Previously Disabled**
        - Reactivate disabled balance type
        - Set isActive = true
        - Resume balance tracking

        **Scenario 3: Change Balance Type**
        - Incorrect type was configured
        - Switch from LOAN_PRINCIPAL to FD_PRINCIPAL
        - Correct configuration error

        **Important Notes:**
        - Changing balance type may affect existing accounts
        - Disabling preserves configuration without deletion
        - Cannot change if accounts actively using this balance
        - Consider migration path for existing accounts

        **Related Endpoints:**
        - GET /api/products/{code}/balances/{type} - View current config
        - DELETE /api/products/{code}/balances/{type} - Remove type
        - POST /api/products/{code}/balances - Add new type
      operationId: updateBalance
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: LOAN-PERSONAL-5Y
        - name: balanceType
          in: path
          description: Current balance type to update
          required: true
          schema:
            type: string
          example: OVERDRAFT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBalanceRequestDTO'
        required: true
      responses:
        '200':
          description: Balance type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBalanceDTO'
              examples:
                Disabled Balance Type:
                  summary: Temporarily disabled OVERDRAFT balance
                  description: Disabled Balance Type
                  value:
                    balanceId: 883e8400-e29b-41d4-a716-446655440003
                    balanceType: OVERDRAFT
                    isActive: false
                    createdAt: '2025-01-01T00:00:00'
                Changed Balance Type:
                  summary: Changed from LOAN to FD balance type
                  description: Changed Balance Type
                  value:
                    balanceId: 881e8400-e29b-41d4-a716-446655440001
                    balanceType: FD_PRINCIPAL
                    isActive: true
                    createdAt: '2025-01-01T00:00:00'
        '400':
          description: Invalid balance type data
          content:
            application/json:
              example:
                error: Validation Failed
                message: 'Invalid balanceType: INVALID_TYPE. Must be one of: LOAN_PRINCIPAL, LOAN_INTEREST, FD_PRINCIPAL, FD_INTEREST, OVERDRAFT, PENALTY'
                timestamp: '2025-10-15T10:30:00'
        '404':
          description: Balance type or product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: Balance type OVERDRAFT not configured for product LOAN-PERSONAL-5Y
                timestamp: '2025-10-15T10:30:00'
    delete:
      tags:
        - Product Balance Types
      summary: Remove balance type from product (permanent)
      description: "Permanently remove a balance type from product configuration. This marks the balance type\nas no longer applicable for this product.\n\n**âš ï¸\x8F WARNING: This operation is IRREVERSIBLE**\n\n**What gets deleted:**\n- Balance type configuration for product\n- Balance type mapping\n\n**What is NOT affected:**\n- Existing account balances (preserved)\n- Historical balance data\n- Transaction history\n- Audit trail\n\n**When to Delete:**\n- Incorrectly configured balance type\n- Product structure simplification\n- Balance type no longer needed\n- Configuration error correction\n\n**Recommended Alternative:**\nInstead of deletion, consider:\n1. Set isActive = false using PUT endpoint\n2. Preserves configuration and history\n3. Can be reactivated if needed\n4. Maintains audit trail\n\n**Common Use Cases:**\n\n**Scenario 1: Remove Unused Balance Type**\n- OVERDRAFT added but never used\n- Product doesn't offer overdraft\n- Clean up configuration\n\n**Scenario 2: Product Restructuring**\n- Changing product balance structure\n- Removing obsolete balance categories\n- Simplifying balance tracking\n\n**Scenario 3: Configuration Cleanup**\n- Test data removal\n- Duplicate balance types\n- Error correction\n\n**â\x9DŒ WRONG USE CASES:**\n- Temporarily stopping balance tracking â†’ Use isActive=false\n- Balance type restructuring â†’ Use PUT to change type\n- Account closure â†’ Leave configuration intact\n\n**Important Validation:**\n- Verify no active accounts using this balance\n- Check for dependent configurations\n- Document reason for removal\n- Backup configuration if needed\n\n**Related Endpoints:**\n- PUT /api/products/{code}/balances/{type} - Update (preferred)\n- GET /api/products/{code}/balances - View remaining types\n- POST /api/products/{code}/balances - Add replacement type\n"
      operationId: deleteBalance
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: LOAN-PERSONAL-5Y
        - name: balanceType
          in: path
          description: "Balance type to permanently remove.\n\nâš ï¸\x8F WARNING: This cannot be undone!\n\nConsider using PUT with isActive=false instead.\n\nValid values:\n- LOAN_PRINCIPAL\n- LOAN_INTEREST\n- FD_PRINCIPAL\n- FD_INTEREST\n- OVERDRAFT\n- PENALTY\n"
          required: true
          schema:
            type: string
          example: OVERDRAFT
      responses:
        '204':
          description: Balance type removed successfully. No content returned.
        '404':
          description: Balance type or product not found
          content:
            application/json:
              examples:
                Balance Type Not Found:
                  description: Balance Type Not Found
                  value:
                    error: Resource Not Found
                    message: Balance type OVERDRAFT not configured for product LOAN-PERSONAL-5Y
                    timestamp: '2025-10-15T10:30:00'
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: LOAN-INVALID-2025'
                    timestamp: '2025-10-15T10:30:00'
        '409':
          description: Cannot delete balance type (has active accounts)
          content:
            application/json:
              example:
                error: Conflict
                message: 'Cannot delete balance type LOAN_PRINCIPAL: 523 accounts actively using this balance. Set isActive=false instead.'
                timestamp: '2025-10-15T10:30:00'
                affectedAccounts: 523
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Failed to delete balance type
                timestamp: '2025-10-15T10:30:00'
  /api/products:
    get:
      tags:
        - Product Management
      summary: Retrieve all products with pagination and sorting
      description: |
        Retrieve a paginated list of all financial products in the system with flexible sorting options.

        **What it returns:**
        - Complete product details including all nested configurations
        - Pagination metadata (total elements, total pages, page number)
        - Sorted results based on specified criteria

        **Pagination Parameters:**
        - **page**: Page number (0-indexed, default: 0)
        - **size**: Items per page (default: 20, max: 100)
        - **sort**: Sort field and direction (e.g., productName,asc)

        **Sorting Options:**
        - productCode (asc/desc)
        - productName (asc/desc)
        - productType (asc/desc)
        - status (asc/desc)
        - createdAt (asc/desc)

        **Use Cases:**

        **Scenario 1: Product Catalog Display**
        - Retrieve first page with 20 products
        - Sort alphabetically by product name
        - Display in UI for customer selection

        **Scenario 2: Admin Dashboard**
        - Retrieve all ACTIVE products
        - Sort by creation date (newest first)
        - Monitor recently launched products

        **Scenario 3: Product Search Results**
        - Show filtered/searched products
        - Paginate large result sets
        - Sort by relevance or name

        **Related Endpoints:**
        - GET /api/products/{code} - Get specific product
        - GET /api/products/search - Search with filters
        - POST /api/products - Create new product

        **Performance Notes:**
        - Large page sizes may impact response time
        - Default page size (20) balances performance and usability
        - Use search endpoint for filtered queries
      operationId: getAllProducts
      parameters:
        - name: pageable
          in: query
          description: |
            Pagination and sorting parameters:
            - page: Page number (0-indexed)
            - size: Items per page (max 100)
            - sort: field,direction (e.g., productName,asc)

            Examples:
            - ?page=0&size=20
            - ?page=1&size=10&sort=productName,asc
            - ?sort=createdAt,desc&size=50
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
          example: page=0&size=20&sort=productName,asc
      responses:
        '200':
          description: Successfully retrieved paginated product list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
              examples:
                First Page - 3 Products:
                  summary: First page with 3 products (size=3)
                  description: First Page - 3 Products
                  value:
                    content:
                      - productId: 550e8400-e29b-41d4-a716-446655440000
                        productCode: SAV-HIGH-YIELD-2025
                        productName: High Yield Savings Account
                        productType: SAVINGS
                        currency: INR
                        status: ACTIVE
                        interestType: COMPOUND
                        compoundingFrequency: DAILY
                        productRules: []
                        productCharges: []
                        productBalances: []
                        createdAt: '2025-10-15T10:30:00'
                      - productId: 660e8400-e29b-41d4-a716-446655440111
                        productCode: FD-1Y-2025
                        productName: 1 Year Fixed Deposit
                        productType: DEPOSIT
                        currency: INR
                        status: ACTIVE
                        interestType: COMPOUND
                        compoundingFrequency: QUARTERLY
                        productRules: []
                        productCharges: []
                        productBalances: []
                        createdAt: '2025-10-15T10:31:00'
                      - productId: 770e8400-e29b-41d4-a716-446655440222
                        productCode: LOAN-PERSONAL-5Y
                        productName: Personal Loan - 5 Years
                        productType: LOAN
                        currency: INR
                        status: ACTIVE
                        interestType: COMPOUND
                        compoundingFrequency: MONTHLY
                        productRules: []
                        productCharges: []
                        productBalances: []
                        createdAt: '2025-10-15T10:32:00'
                    pageable:
                      pageNumber: 0
                      pageSize: 3
                      sort:
                        sorted: true
                        unsorted: false
                        empty: false
                      offset: 0
                      paged: true
                      unpaged: false
                    totalElements: 15
                    totalPages: 5
                    last: false
                    first: true
                    size: 3
                    number: 0
                    numberOfElements: 3
                    empty: false
                Empty Result:
                  summary: No products found (empty database or filtered out)
                  description: Empty Result
                  value:
                    content: []
                    pageable:
                      pageNumber: 0
                      pageSize: 20
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      paged: true
                      unpaged: false
                    totalElements: 0
                    totalPages: 0
                    last: true
                    first: true
                    size: 20
                    number: 0
                    numberOfElements: 0
                    empty: true
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Database connection failed
                timestamp: '2025-10-15T10:30:00'
    post:
      tags:
        - Product Management
      summary: Create a new financial product
      description: |
        Create a new financial product in the system with comprehensive configuration.

        **Product Configuration Includes:**

        1. **Basic Information:**
           - Unique product code (identifier)
           - Product name and description
           - Product type (SAVINGS, CURRENT, LOAN, DEPOSIT, etc.)
           - Currency and status

        2. **Interest Configuration:**
           - Interest type: SIMPLE or COMPOUND
           - Compounding frequency: DAILY, MONTHLY, QUARTERLY, SEMI_ANNUALLY, ANNUALLY
           - These settings define how interest is calculated for the product

        3. **Effective Dates:**
           - Effective date: When the product becomes available
           - Expiry date: When the product is discontinued (optional)

        **After Creation:**
        - Product receives a unique UUID
        - Child configurations can be added:
          * Interest rates (via /api/products/{code}/interest)
          * Charges/Fees (via /api/products/{code}/charges)
          * Balance types (via /api/products/{code}/balances)
          * Business rules (via /api/products/{code}/rules)
          * Allowed transactions (via /api/products/{code}/transactions)
          * User roles (via /api/products/{code}/roles)
          * Communication templates (via /api/products/{code}/communications)

        **Example Scenarios:**

        **Savings Account:**
        - Compound interest with daily compounding
        - No maintenance fees
        - Minimum balance requirements

        **Fixed Deposit:**
        - Simple or compound interest
        - Quarterly/Annual compounding
        - Penalty for early withdrawal

        **Loan Product:**
        - Compound interest with monthly compounding
        - Processing fees and penalties
        - Balance types: LOAN_PRINCIPAL, LOAN_INTEREST, PENALTY
      operationId: createProduct
      requestBody:
        description: Product creation details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateProductRequestDTO'
            examples:
              Savings Account Product:
                summary: High-yield savings account with daily compound interest
                description: Savings Account Product
                value:
                  productCode: SAV-HIGH-YIELD-2025
                  productName: High Yield Savings Account
                  productType: SAVINGS
                  description: Premium savings account with competitive interest rates
                  currency: INR
                  status: ACTIVE
                  interestType: COMPOUND
                  compoundingFrequency: DAILY
                  efctv_date: '2025-01-01'
                  expr_date: '2026-12-31'
              Fixed Deposit Product:
                summary: Fixed deposit below 500000 with quarterly compounding
                description: Fixed Deposit Product
                value:
                  productCode: FD001
                  productName: Fixed deposit below 500000
                  productType: FIXED_DEPOSIT
                  description: Fixed deposit with guaranteed returns
                  currency: INR
                  status: ACTIVE
                  interestType: COMPOUND
                  compoundingFrequency: QUARTERLY
                  efctv_date: '2025-01-01'
              Personal Loan Product:
                summary: Personal loan with monthly compound interest
                description: Personal Loan Product
                value:
                  productCode: LOAN-PERSONAL
                  productName: Personal Loan
                  productType: LOAN
                  description: Unsecured personal loan up to Â¥5,000,000
                  currency: JPY
                  status: ACTIVE
                  interestType: COMPOUND
                  compoundingFrequency: MONTHLY
                  efctv_date: '2025-01-01'
              Current Account Product:
                summary: Business current account with no interest
                description: Current Account Product
                value:
                  productCode: CUR-BUSINESS-2025
                  productName: Business Current Account
                  productType: CURRENT
                  description: Zero-balance business account with unlimited transactions
                  currency: AED
                  status: ACTIVE
                  efctv_date: '2025-01-01'
        required: true
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailsDTO'
              examples:
                Created Savings Product:
                  summary: Response after creating savings account product
                  description: Created Savings Product
                  value:
                    productId: 550e8400-e29b-41d4-a716-446655440000
                    productCode: SAV-HIGH-YIELD-2025
                    productName: High Yield Savings Account
                    productType: SAVINGS
                    currency: INR
                    status: ACTIVE
                    interestType: COMPOUND
                    compoundingFrequency: DAILY
                    productRules: []
                    productCharges: []
                    productRoles: []
                    productTransactions: []
                    productBalances: []
                    productCommunications: []
                    createdAt: '2025-10-15T10:30:00'
                    efctv_date: '2025-01-01'
                Created Loan Product:
                  summary: Response after creating loan product
                  description: Created Loan Product
                  value:
                    productId: 660e8400-e29b-41d4-a716-446655440111
                    productCode: LOAN-PERSONAL-5Y
                    productName: Personal Loan - 5 Years
                    productType: LOAN
                    currency: INR
                    status: ACTIVE
                    interestType: COMPOUND
                    compoundingFrequency: MONTHLY
                    productRules: []
                    productCharges: []
                    productRoles: []
                    productTransactions: []
                    productBalances: []
                    productCommunications: []
                    createdAt: '2025-10-15T10:31:00'
                    efctv_date: '2025-01-01'
        '400':
          description: Invalid request data
          content:
            application/json:
              examples:
                Missing Required Field:
                  description: Missing Required Field
                  value:
                    error: Validation failed
                    message: Product code is required
                    timestamp: '2025-10-15T10:30:00'
                Invalid Enum Value:
                  description: Invalid Enum Value
                  value:
                    error: Validation failed
                    message: 'Invalid enum value: No enum constant INTEREST_TYPE.COMPLEX'
                    timestamp: '2025-10-15T10:30:00'
                Duplicate Product Code:
                  description: Duplicate Product Code
                  value:
                    error: Validation failed
                    message: Product code SAV-HIGH-YIELD-2025 already exists
                    timestamp: '2025-10-15T10:30:00'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Database connection failed
                timestamp: '2025-10-15T10:30:00'
  /api/products/{productCode}/transactions:
    get:
      tags:
        - Product Transaction Types
      summary: Retrieve all transaction configurations for product
      description: |
        Get a paginated list of all transaction types configured for a specific product.

        **What You Get:**
        Complete list of configured transaction types with:
        - Transaction codes and types
        - Amount limits for each transaction
        - Transaction identifiers

        **Use Cases:**

        **Scenario 1: Product Setup Verification**
        After configuring new product:
        - Review all allowed transaction types
        - Verify DEPOSIT and WITHDRAWAL are configured
        - Check if INTEREST_ACCRUED is enabled
        - Ensure amount limits are correct

        **Scenario 2: Customer Service**
        Customer asks "What transactions can I perform?":
        - Show allowed transaction types
        - Explain DEPOSIT vs WITHDRAWAL
        - Clarify PAYMENT capabilities
        - Identify DISBURSEMENT options (for loans)

        **Scenario 3: Compliance Audit**
        Regulatory review requires:
        - Document all transaction types
        - Verify transaction limits
        - Check which operations are enabled
        - Validate configurations

        **Scenario 4: Product Comparison**
        Compare transaction capabilities:
        - Basic vs Premium accounts
        - Savings vs Current accounts
        - Loan vs Deposit products

        **Scenario 5: Transaction Matrix Review**
        Analyze product capabilities:
        - Which transaction types are configured
        - What are the amount limits
        - Are all necessary types present

        **Response Includes:**
        - Transaction configurations
        - Pagination information
        - Total count of transaction types

        **Related Endpoints:**
        - GET /api/products/{code}/transactions/{code} - View specific transaction
        - POST /api/products/{code}/transactions - Add new transaction type
        - PUT /api/products/{code}/transactions/{code} - Update transaction
      operationId: getTransactions
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: pageable
          in: query
          description: |
            Pagination parameters:
            - page: Page number (0-indexed)
            - size: Items per page
            - sort: Sort field and direction

            Example: ?page=0&size=10&sort=transactionType,asc
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
          example: page=0&size=10
      responses:
        '200':
          description: Transaction configurations retrieved successfully
          content:
            application/json:
              examples:
                FD001 Transaction Types:
                  summary: Fixed Deposit under 500000 - transaction configuration
                  description: FD001 Transaction Types
                  value:
                    content:
                      - transactionId: 3e6dcd5d-1615-4e93-8cd3-dc9a2bf8713f
                        transactionCode: FD_DEPOSIT
                        transactionType: DEPOSIT
                        amountLimit: null
                    pageable:
                      pageNumber: 0
                      pageSize: 10
                      sort:
                        sorted: false
                        empty: true
                    totalElements: 1
                    totalPages: 1
                    last: true
                    first: true
                    number: 0
                    size: 10
                    numberOfElements: 1
                    empty: false
                Savings Account Transactions:
                  summary: Standard savings account transaction types
                  description: Savings Account Transactions
                  value:
                    content:
                      - transactionId: 991e8400-e29b-41d4-a716-446655440001
                        transactionCode: TXN_DEPOSIT
                        transactionType: DEPOSIT
                        amountLimit: 50000
                      - transactionId: 992e8400-e29b-41d4-a716-446655440002
                        transactionCode: TXN_WITHDRAWAL
                        transactionType: WITHDRAWAL
                        amountLimit: 2000
                      - transactionId: 993e8400-e29b-41d4-a716-446655440003
                        transactionCode: TXN_INTEREST_ACCRUED
                        transactionType: INTEREST_ACCRUED
                        amountLimit: null
                    pageable:
                      pageNumber: 0
                      pageSize: 10
                      sort:
                        sorted: false
                        empty: true
                    totalElements: 3
                    totalPages: 1
                    last: true
                    first: true
                    number: 0
                    size: 10
                    numberOfElements: 3
                    empty: false
                Loan Product Transactions:
                  summary: Loan-specific transaction types
                  description: Loan Product Transactions
                  value:
                    content:
                      - transactionId: 994e8400-e29b-41d4-a716-446655440004
                        transactionCode: TXN_DISBURSEMENT
                        transactionType: DISBURSEMENT
                        amountLimit: 1000000
                      - transactionId: 995e8400-e29b-41d4-a716-446655440005
                        transactionCode: TXN_PAYMENT
                        transactionType: PAYMENT
                        amountLimit: 50000
                      - transactionId: 996e8400-e29b-41d4-a716-446655440006
                        transactionCode: TXN_INTEREST_ACCRUED
                        transactionType: INTEREST_ACCRUED
                        amountLimit: null
                    totalElements: 3
                    totalPages: 1
                    number: 0
                    size: 10
                    numberOfElements: 3
                    empty: false
        '404':
          description: Product not found
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T10:00:00'
    post:
      tags:
        - Product Transaction Types
      summary: Configure allowed transaction type for product
      description: |
        Add a new transaction type configuration to a product, defining what operations are allowed.

        **Transaction Types Supported:**
        - **DEPOSIT** - Cash or check deposits, credit transactions
        - **WITHDRAWAL** - Cash withdrawals, debit transactions
        - **INTEREST_ACCRUED** - Automatic interest posting/calculation
        - **DISBURSEMENT** - Loan disbursements, fund releases
        - **PAYMENT** - Bill payments, loan repayments

        **Configuration Includes:**
        - Unique transaction code (identifier)
        - Transaction name (display name)
        - Transaction type (enum value)
        - Debit/Credit indicator (D for debit, C for credit)
        - Minimum transaction amount
        - Maximum transaction amount
        - Description and notes
        - Active/inactive status

        **Use Cases:**

        **Scenario 1: Savings Account Setup**
        Configure basic transaction types:
        - DEPOSIT (credit): min â‚¹1,000, max â‚¹1,0000,000
        - WITHDRAWAL (debit): min â‚¹2,000, max â‚¹2,00,000 per transaction
        - INTEREST_ACCRUED (credit): automated monthly interest posting

        **Scenario 2: Fixed Deposit Product**
        Configure limited transaction types:
        - DEPOSIT allowed only (initial investment)
        - WITHDRAWAL restricted (until maturity)
        - INTEREST_ACCRUED enabled for automatic interest

        **Scenario 3: Loan Product**
        Configure loan-specific transactions:
        - DISBURSEMENT (debit): one-time loan amount
        - PAYMENT (credit): regular repayments
        - INTEREST_ACCRUED (debit): interest calculations

        **Scenario 4: Current Account**
        Full transaction capabilities:
        - DEPOSIT: unlimited frequency, high limits
        - WITHDRAWAL: high daily limits
        - PAYMENT: bill payments enabled

        **Scenario 5: Minor Account (Restricted)**
        Limited transaction types:
        - DEPOSIT only (no withdrawals)
        - Lower transaction limits
        - Parental approval required

        **Related Endpoints:**
        - GET /api/products/{code}/transactions - View all transaction configurations
        - PUT /api/products/{code}/transactions/{code} - Update transaction config
        - DELETE /api/products/{code}/transactions/{code} - Remove transaction type
      operationId: addTransaction
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      requestBody:
        description: |
          Transaction type configuration.

          Required fields:
          - transactionCode: Unique identifier (e.g., "TXN_WITHDRAWAL")
          - transactionName: Display name
          - transactionType: DEPOSIT, WITHDRAWAL, INTEREST_ACCRUED, DISBURSEMENT, or PAYMENT
          - debitCreditIndicator: "D" for debit, "C" for credit
          - minimumAmount: Minimum transaction amount
          - maximumAmount: Maximum transaction amount

          Optional:
          - description: Additional notes
          - isActive: Enable/disable transaction type (default: true)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTransactionRequestDTO'
            examples:
              Withdrawal Configuration:
                summary: Standard withdrawal with limits
                description: Withdrawal Configuration
                value:
                  transactionCode: TXN_WITHDRAWAL
                  transactionName: Account Withdrawal
                  transactionType: WITHDRAWAL
                  debitCreditIndicator: D
                  minimumAmount: 20
                  maximumAmount: 2000
                  description: Standard cash withdrawal from account
                  isActive: true
              Deposit Configuration:
                summary: High-limit deposit capability
                description: Deposit Configuration
                value:
                  transactionCode: TXN_DEPOSIT
                  transactionName: Account Deposit
                  transactionType: DEPOSIT
                  debitCreditIndicator: C
                  minimumAmount: 10
                  maximumAmount: 100000
                  description: Cash or check deposit into account
                  isActive: true
              Interest Accrual:
                summary: Automatic interest posting
                description: Interest Accrual
                value:
                  transactionCode: TXN_INTEREST_ACCRUED
                  transactionName: Interest Posting
                  transactionType: INTEREST_ACCRUED
                  debitCreditIndicator: C
                  minimumAmount: 0.01
                  maximumAmount: 999999.99
                  description: Automatic monthly interest accrual
                  isActive: true
        required: true
      responses:
        '201':
          description: Transaction type configured successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTransactionDTO'
              examples:
                FD001 Deposit Configuration:
                  summary: Fixed Deposit initial deposit transaction
                  description: FD001 Deposit Configuration
                  value:
                    transactionId: 3e6dcd5d-1615-4e93-8cd3-dc9a2bf8713f
                    transactionCode: FD_DEPOSIT
                    transactionType: DEPOSIT
                    amountLimit: null
                Savings Withdrawal Configuration:
                  summary: Cash withdrawal transaction type
                  description: Savings Withdrawal Configuration
                  value:
                    transactionId: 991e8400-e29b-41d4-a716-446655440001
                    transactionCode: TXN_WITHDRAWAL
                    transactionType: WITHDRAWAL
                    amountLimit: 500
                Interest Accrual Configuration:
                  summary: Automatic interest posting
                  description: Interest Accrual Configuration
                  value:
                    transactionId: 993e8400-e29b-41d4-a716-446655440003
                    transactionCode: TXN_INTEREST_ACCRUED
                    transactionType: INTEREST_ACCRUED
                    amountLimit: null
        '400':
          description: Invalid transaction configuration
          content:
            application/json:
              examples:
                Missing Required Field:
                  description: Missing Required Field
                  value:
                    error: Validation Error
                    message: Transaction type is required
                    timestamp: '2025-10-18T10:00:00'
                Invalid Amount Range:
                  description: Invalid Amount Range
                  value:
                    error: Validation Error
                    message: Maximum amount must be greater than minimum amount
                    timestamp: '2025-10-18T10:00:00'
                Duplicate Transaction Type:
                  description: Duplicate Transaction Type
                  value:
                    error: Duplicate Entry
                    message: Transaction type 'WITHDRAWAL' with channel 'ATM' already exists for this product
                    timestamp: '2025-10-18T10:00:00'
        '404':
          description: Product not found
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T10:00:00'
  /api/products/{productCode}/rules:
    get:
      tags:
        - Product Business Rules
      summary: Retrieve all business rules for product
      description: |
        Get complete list of all business rules configured for this product. Shows all constraints,
        validations, limits, and operational rules.

        **What it returns:**
        - All configured business rules
        - Rule types and priorities
        - Rule expressions/logic
        - Active/inactive status
        - Error messages
        - Execution order (by priority)

        **Use Cases:**

        **Scenario 1: Account Opening Validation**
        - System retrieves all eligibility rules
        - Validates applicant against each rule
        - Blocks if any rule fails
        - Shows error message to user

        **Scenario 2: Transaction Processing**
        - Retrieve transaction limit rules
        - Check against current transaction
        - Decline if exceeds limits
        - Log rule violation

        **Scenario 3: Admin Rule Review**
        - Review all product rules
        - Verify rule configuration
        - Check for conflicts or gaps
        - Plan rule updates

        **Scenario 4: Compliance Audit**
        - Export all rule configurations
        - Document business logic
        - Verify regulatory compliance
        - Compare across products

        **Response Ordering:**
        - Rules sorted by priority (ascending)
        - Lower number = higher priority
        - Priority 1 executes before Priority 2
        - Helps understand rule execution flow

        **Related Endpoints:**
        - POST /api/products/{code}/rules - Add new rule
        - GET /api/products/{code}/rules/{id} - Get specific rule
        - PUT /api/products/{code}/rules/{id} - Update rule
        - GET /api/products/{code} - View product configuration
      operationId: getRules
      parameters:
        - name: productCode
          in: path
          description: |
            Product code to retrieve rules for.

            Returns all business rules sorted by priority.
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: pageable
          in: query
          description: Pagination parameters (page, size, sort)
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
          example: page=0&size=20&sort=rulePriority,asc
      responses:
        '200':
          description: Business rules retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
              examples:
                FD001 Business Rules:
                  summary: Fixed Deposit under 500000 - Comprehensive rule set
                  description: FD001 Business Rules
                  value:
                    content:
                      - ruleId: a9e3f3f3-a120-41a3-8e5e-b2c1f0b5e080
                        ruleCode: MIN001
                        ruleName: Minimum for FD001
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '10000'
                        validationType: MIN_MAX
                      - ruleId: 37fe7f8a-d9ea-4661-8ac9-dc3dc3ea5dcd
                        ruleCode: MAX001
                        ruleName: Maximum for FD001
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '500000'
                        validationType: MIN_MAX
                      - ruleId: 1baae6cf-106a-444d-b7a7-85b889f329d8
                        ruleCode: JR001
                        ruleName: Extra Interest for under 18
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '0.5'
                        validationType: EXACT
                      - ruleId: c478c7af-9d64-41a6-b2e2-45552054c85d
                        ruleCode: SR001
                        ruleName: Extra Interest for sr
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '0.75'
                        validationType: EXACT
                      - ruleId: fb409ac1-149f-4163-8e88-835da99bb8bc
                        ruleCode: DY001
                        ruleName: Extra Interest for Digi Youth
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '0.25'
                        validationType: EXACT
                      - ruleId: 6c4879fc-9650-4762-bdff-28c3fbf8177f
                        ruleCode: SIL001
                        ruleName: Silver members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '0.5'
                        validationType: EXACT
                      - ruleId: 473f6407-6378-412e-8ef4-b579e362d83a
                        ruleCode: GOLD001
                        ruleName: Gold members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '1'
                        validationType: EXACT
                      - ruleId: fe956b24-a359-4c26-bafd-05855e669851
                        ruleCode: PLAT001
                        ruleName: Platinum members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '1.5'
                        validationType: EXACT
                      - ruleId: d77a6842-2296-40cc-af4b-81b72c770e61
                        ruleCode: EMP001
                        ruleName: Employee members extra interest
                        ruleType: SIMPLE
                        dataType: NUMBER
                        ruleValue: '1.5'
                        validationType: EXACT
                      - ruleId: 363ffabc-0827-46d3-bcd1-adae3f42ffe3
                        ruleCode: MAXINT001
                        ruleName: Maximum excess interest
                        ruleType: SIMPLE
                        dataType: PERCENTAGE
                        ruleValue: '2'
                        validationType: MIN_MAX
                    totalElements: 10
                    totalPages: 1
                    number: 0
                    size: 20
                Savings Account Rules:
                  summary: 3 business rules for savings product
                  description: Savings Account Rules
                  value:
                    content:
                      - ruleId: 991e8400-e29b-41d4-a716-446655440001
                        ruleName: Age Eligibility
                        ruleType: ELIGIBILITY
                        ruleExpression: age >= 18
                        rulePriority: 1
                        errorMessage: Must be 18+ years old
                        isActive: true
                      - ruleId: 992e8400-e29b-41d4-a716-446655440002
                        ruleName: Minimum Opening Balance
                        ruleType: VALIDATION
                        ruleExpression: opening_balance >= 100
                        rulePriority: 2
                        errorMessage: 'Minimum opening balance: â‚¹10,000'
                        isActive: true
                      - ruleId: 993e8400-e29b-41d4-a716-446655440003
                        ruleName: Daily Withdrawal Limit
                        ruleType: TRANSACTION_LIMIT
                        ruleExpression: daily_withdrawals <= 1000
                        rulePriority: 3
                        errorMessage: 'Daily limit: â‚¹1,00,000'
                        isActive: true
                    totalElements: 3
                    totalPages: 1
                    number: 0
                    size: 20
                Loan Product Rules:
                  summary: Complex loan validation rules
                  description: Loan Product Rules
                  value:
                    content:
                      - ruleId: 994e8400-e29b-41d4-a716-446655440004
                        ruleName: Credit Score Minimum
                        ruleType: ELIGIBILITY
                        ruleExpression: credit_score >= 650
                        rulePriority: 1
                        errorMessage: 'Minimum credit score: 650'
                        isActive: true
                      - ruleId: 995e8400-e29b-41d4-a716-446655440005
                        ruleName: Debt-to-Income Ratio
                        ruleType: VALIDATION
                        ruleExpression: debt_to_income <= 0.43
                        rulePriority: 2
                        errorMessage: DTI cannot exceed 43%
                        isActive: true
                      - ruleId: 996e8400-e29b-41d4-a716-446655440006
                        ruleName: Maximum Loan Amount
                        ruleType: LIMIT
                        ruleExpression: loan_amount <= 5 * annual_income
                        rulePriority: 3
                        errorMessage: 'Max loan: 5x annual income'
                        isActive: true
                    totalElements: 3
                    totalPages: 1
                    number: 0
                    size: 20
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: SAV-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
    post:
      tags:
        - Product Business Rules
      summary: Configure business rule for product
      description: |
        Add a new business rule to govern product behavior and operations. Rules define constraints,
        validations, limits, and conditional logic for the product.

        **Common Business Rules:**

        **Balance Limits:**
        - Minimum opening balance requirement
        - Maximum balance allowed
        - Minimum monthly balance
        - Overdraft limit

        **Transaction Limits:**
        - Daily withdrawal limit
        - Per-transaction maximum
        - Monthly transaction count limit
        - ATM withdrawal restrictions

        **Eligibility Rules:**
        - Age restrictions (18+, under 60, etc.)
        - Income requirements (min annual income)
        - Credit score minimums
        - Geographic restrictions

        **Operational Rules:**
        - Account closure restrictions (min 90 days)
        - Dormancy period (inactive after 12 months)
        - Statement frequency requirements
        - Auto-sweep rules

        **Penalty Rules:**
        - Minimum balance penalty triggers
        - Late payment conditions
        - Early closure penalties
        - Overdraft penalty rules

        **Use Cases:**

        **Scenario 1: Minimum Balance Rule**
        - Rule: Minimum balance must be â‚¹10,000
        - Type: VALIDATION
        - Action: Reject if balance < â‚¹10,000
        - Penalty: $5 fee if falls below

        **Scenario 2: Age Restriction Rule**
        - Rule: Account holder must be 18+ years
        - Type: ELIGIBILITY
        - Action: Block account opening if under 18
        - Exception: Joint account with parent

        **Scenario 3: Daily Withdrawal Limit**
        - Rule: Maximum â‚¹1,00,000 withdrawal per day
        - Type: TRANSACTION_LIMIT
        - Action: Decline if exceeds limit
        - Reset: Daily at midnight

        **Scenario 4: Loan Amount Limit**
        - Rule: Maximum loan 5x annual income
        - Type: LENDING_RULE
        - Action: Reject if exceeds ratio
        - Override: Manager approval required

        **Rule Components:**
        - **Rule Name**: Descriptive identifier
        - **Rule Type**: Category (VALIDATION, LIMIT, ELIGIBILITY)
        - **Rule Expression**: Logic/condition (JSON or expression)
        - **Rule Priority**: Execution order
        - **Active Status**: Enable/disable rule
        - **Error Message**: User-friendly message on violation

        **Related Endpoints:**
        - GET /api/products/{code}/rules - View all rules
        - PUT /api/products/{code}/rules/{id} - Update rule
        - DELETE /api/products/{code}/rules/{id} - Remove rule
        - POST /api/products - Create product first
      operationId: addRule
      parameters:
        - name: productCode
          in: path
          description: |
            Product code to add business rule to.

            Example: SAV-HIGH-YIELD-2025
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRuleRequestDTO'
        required: true
      responses:
        '201':
          description: Business rule created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRuleDTO'
              examples:
                FD001 Minimum Amount Rule:
                  summary: FD minimum 10,000 INR requirement
                  description: FD001 Minimum Amount Rule
                  value:
                    ruleId: a9e3f3f3-a120-41a3-8e5e-b2c1f0b5e080
                    ruleCode: MIN001
                    ruleName: Minimum for FD001
                    ruleType: SIMPLE
                    dataType: NUMBER
                    ruleValue: '10000'
                    validationType: MIN_MAX
                    isActive: true
                    createdAt: '2025-10-15T10:30:00'
                FD001 Maximum Amount Rule:
                  summary: FD maximum 500,000 INR limit
                  description: FD001 Maximum Amount Rule
                  value:
                    ruleId: 37fe7f8a-d9ea-4661-8ac9-dc3dc3ea5dcd
                    ruleCode: MAX001
                    ruleName: Maximum for FD001
                    ruleType: SIMPLE
                    dataType: NUMBER
                    ruleValue: '500000'
                    validationType: MIN_MAX
                    isActive: true
                    createdAt: '2025-10-15T10:31:00'
                Savings Age Rule:
                  summary: Must be 18 years or older
                  description: Savings Age Rule
                  value:
                    ruleId: 992e8400-e29b-41d4-a716-446655440002
                    ruleName: Age Eligibility Check
                    ruleType: ELIGIBILITY
                    ruleExpression: age >= 18
                    rulePriority: 1
                    errorMessage: Account holder must be 18 years or older
                    isActive: true
                    createdAt: '2025-10-15T10:31:00'
        '400':
          description: Invalid rule configuration
          content:
            application/json:
              examples:
                Missing Required Field:
                  description: Missing Required Field
                  value:
                    error: Validation Failed
                    message: ruleName is required
                    timestamp: '2025-10-15T10:30:00'
                Invalid Rule Expression:
                  description: Invalid Rule Expression
                  value:
                    error: Validation Failed
                    message: 'Invalid rule expression syntax: ''balance > invalid'''
                    timestamp: '2025-10-15T10:30:00'
                Duplicate Rule Name:
                  description: Duplicate Rule Name
                  value:
                    error: Conflict
                    message: Rule 'Minimum Balance Requirement' already exists for product SAV-HIGH-YIELD-2025
                    timestamp: '2025-10-15T10:30:00'
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: SAV-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
  /api/products/{productCode}/roles:
    get:
      tags:
        - Product Roles & Permissions
      summary: Retrieve all role configurations for product
      description: |
        Get a paginated list of all user roles configured for a specific product with their permissions.

        **What You Get:**
        Complete role and permission structure:
        - All defined roles for the product
        - Permission levels per role
        - Transaction limits (if applicable)
        - Approval requirements
        - Active/inactive status

        **Use Cases:**

        **Scenario 1: Product Access Control Review**
        Audit who can access this product:
        - List all authorized roles
        - Review permission levels
        - Verify transaction limits
        - Check for unauthorized access

        **Scenario 2: Customer Onboarding**
        Explain account ownership options:
        - Show available role types
        - Explain permissions per role
        - Help customer choose structure
        - Set up joint accounts

        **Scenario 3: Compliance Verification**
        Regulatory audit requires:
        - Document all access roles
        - Verify separation of duties
        - Check approval workflows
        - Validate transaction limits

        **Scenario 4: Account Structure Planning**
        Design multi-user account:
        - Review available roles
        - Plan permission hierarchy
        - Set appropriate limits
        - Balance security vs usability

        **Scenario 5: Permission Matrix Documentation**
        Create reference documentation:
        - Export all roles and permissions
        - Create training materials
        - Update customer communications
        - Support system integrations

        **Response Includes:**
        - Full role configurations
        - Pagination details
        - Total count of roles
        - Sorted by role hierarchy

        **Related Endpoints:**
        - GET /api/products/{code}/roles/{id} - View specific role details
        - POST /api/products/{code}/roles - Add new role
        - PUT /api/products/{code}/roles/{id} - Update role permissions
      operationId: getRoles
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: pageable
          in: query
          description: |
            Pagination parameters:
            - page: Page number (0-indexed)
            - size: Items per page
            - sort: Sort field and direction

            Example: ?page=0&size=10&sort=roleName,asc
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
          example: page=0&size=10
      responses:
        '200':
          description: Role configurations retrieved successfully
          content:
            application/json:
              examples:
                FD001 Role Configuration:
                  summary: Fixed Deposit under 500000 - role setup
                  description: FD001 Role Configuration
                  value:
                    content:
                      - roleId: f1097ab9-789c-4bf2-984a-eaa6d42b1fed
                        roleCode: ROLE001
                        roleType: OWNER
                        roleName: OWNER
                        permissions:
                          - VIEW
                          - TRANSACT
                          - MODIFY
                          - CLOSE
                        transactionLimit: null
                        requiresApproval: false
                        isActive: true
                        createdAt: '2025-01-15T10:00:00'
                    totalElements: 1
                    totalPages: 1
                    number: 0
                    size: 10
                    numberOfElements: 1
                    empty: false
                Joint Account Roles:
                  summary: Two owners with equal rights
                  description: Joint Account Roles
                  value:
                    content:
                      - roleId: role-991e8400-e29b-41d4-a716-446655440001
                        roleName: PRIMARY_OWNER
                        roleDescription: Primary account holder with full control
                        permissions:
                          - VIEW
                          - TRANSACT
                          - MODIFY
                          - CLOSE
                        transactionLimit: null
                        requiresApproval: false
                        isActive: true
                        createdAt: '2025-01-15T10:00:00'
                      - roleId: role-992e8400-e29b-41d4-a716-446655440002
                        roleName: CO_OWNER
                        roleDescription: Joint account holder with equal rights
                        permissions:
                          - VIEW
                          - TRANSACT
                          - MODIFY
                          - CLOSE
                        transactionLimit: null
                        requiresApproval: false
                        isActive: true
                        createdAt: '2025-01-15T10:00:00'
                    totalElements: 2
                    totalPages: 1
                    number: 0
                    size: 10
                    numberOfElements: 2
                    empty: false
                Business Account Roles:
                  summary: Multiple roles with varied permissions
                  description: Business Account Roles
                  value:
                    content:
                      - roleId: role-991e8400-e29b-41d4-a716-446655440001
                        roleName: PRIMARY_OWNER
                        roleDescription: Business owner with full control
                        permissions:
                          - VIEW
                          - TRANSACT
                          - MODIFY
                          - CLOSE
                        transactionLimit: null
                        requiresApproval: false
                        isActive: true
                      - roleId: role-992e8400-e29b-41d4-a716-446655440002
                        roleName: AUTHORIZED_USER
                        roleDescription: Finance manager with transaction limits
                        permissions:
                          - VIEW
                          - TRANSACT
                        transactionLimit: 50000
                        requiresApproval: true
                        isActive: true
                      - roleId: role-993e8400-e29b-41d4-a716-446655440003
                        roleName: VIEW_ONLY
                        roleDescription: Accountant with read-only access
                        permissions:
                          - VIEW
                        transactionLimit: 0
                        requiresApproval: false
                        isActive: true
                    totalElements: 3
                    totalPages: 1
                    number: 0
                    size: 10
                    numberOfElements: 3
                    empty: false
        '404':
          description: Product not found
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T11:00:00'
    post:
      tags:
        - Product Roles & Permissions
      summary: Define user role permissions for product access
      description: |
        Configure which user roles can access and interact with a specific financial product.

        **Role Types Commonly Used:**
        - **PRIMARY_OWNER** - Primary account holder with full control
        - **CO_OWNER** - Joint account holder with equal rights
        - **AUTHORIZED_USER** - Can transact but not close account
        - **VIEW_ONLY** - Read-only access to account
        - **GUARDIAN** - For minor accounts (parent/guardian)
        - **BENEFICIARY** - Receives funds under specific conditions
        - **POWER_OF_ATTORNEY** - Legal representative
        - **TRUSTEE** - Trust account manager

        **Permissions Typically Associated:**
        - **Full Access**: View, transact, modify, close
        - **Transaction Rights**: View, deposit, withdraw, transfer
        - **View Rights**: View balance and statements only
        - **Administrative**: Product configuration, user management

        **Use Cases:**

        **Scenario 1: Joint Savings Account**
        Two account holders with equal rights:
        - PRIMARY_OWNER (spouse 1)
        - CO_OWNER (spouse 2)
        - Both can transact independently
        - Either can close account

        **Scenario 2: Business Current Account**
        Multiple authorized signatories:
        - PRIMARY_OWNER (business owner)
        - AUTHORIZED_USER (finance manager)
        - AUTHORIZED_USER (operations manager)
        - VIEW_ONLY (accountant)

        **Scenario 3: Minor's Savings Account**
        Guardian manages until child is 18:
        - GUARDIAN (parent) - full access
        - PRIMARY_OWNER (child) - future owner
        - Auto-transfer control at age 18

        **Scenario 4: Trust Fixed Deposit**
        Professional management:
        - TRUSTEE (trust company)
        - BENEFICIARY (trust beneficiary)
        - Limited actions per trust deed

        **Role Configuration Includes:**
        - Role name and type
        - Permission level
        - Access restrictions
        - Transaction limits (if applicable)
        - Duration/expiry (optional)

        **Related Endpoints:**
        - GET /api/products/{code}/roles - View all role configurations
        - PUT /api/products/{code}/roles/{id} - Update role permissions
        - DELETE /api/products/{code}/roles/{id} - Remove role access
      operationId: addRole
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      requestBody:
        description: |
          Role configuration details.

          Required fields:
          - roleName (PRIMARY_OWNER, CO_OWNER, etc.)
          - roleDescription
          - permissions (array)

          Optional:
          - transactionLimit (null = unlimited)
          - requiresApproval (default false)
          - isActive (default true)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRoleRequestDTO'
            examples:
              Primary Owner:
                summary: Full account control
                description: Primary Owner
                value:
                  roleName: PRIMARY_OWNER
                  roleDescription: Primary account holder with full control
                  permissions:
                    - VIEW
                    - TRANSACT
                    - MODIFY
                    - CLOSE
                  transactionLimit: null
                  requiresApproval: false
                  isActive: true
              Authorized User:
                summary: Limited transaction rights
                description: Authorized User
                value:
                  roleName: AUTHORIZED_USER
                  roleDescription: Can perform transactions with daily limits
                  permissions:
                    - VIEW
                    - TRANSACT
                  transactionLimit: 10000
                  requiresApproval: false
                  isActive: true
              View Only:
                summary: Read-only access
                description: View Only
                value:
                  roleName: VIEW_ONLY
                  roleDescription: Read-only access to account information
                  permissions:
                    - VIEW
                  transactionLimit: 0
                  requiresApproval: false
                  isActive: true
        required: true
      responses:
        '201':
          description: Role configured successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRoleDTO'
              examples:
                FD001 Owner Role:
                  summary: Fixed Deposit owner with full control
                  description: FD001 Owner Role
                  value:
                    roleId: f1097ab9-789c-4bf2-984a-eaa6d42b1fed
                    roleCode: ROLE001
                    roleType: OWNER
                    roleName: OWNER
                    permissions:
                      - VIEW
                      - TRANSACT
                      - MODIFY
                      - CLOSE
                    transactionLimit: null
                    requiresApproval: false
                    isActive: true
                    createdAt: '2025-10-18T11:00:00'
                Authorized User Role:
                  summary: Transaction rights with limits
                  description: Authorized User Role
                  value:
                    roleId: role-992e8400-e29b-41d4-a716-446655440002
                    roleName: AUTHORIZED_USER
                    roleDescription: Can perform transactions with daily limits
                    permissions:
                      - VIEW
                      - TRANSACT
                    transactionLimit: 10000
                    requiresApproval: false
                    isActive: true
                    createdAt: '2025-10-18T11:00:00'
                View Only Role:
                  summary: Read-only access for monitoring
                  description: View Only Role
                  value:
                    roleId: role-993e8400-e29b-41d4-a716-446655440003
                    roleName: VIEW_ONLY
                    roleDescription: Read-only access to account information
                    permissions:
                      - VIEW
                    transactionLimit: 0
                    requiresApproval: false
                    isActive: true
                    createdAt: '2025-10-18T11:00:00'
        '400':
          description: Invalid role configuration
          content:
            application/json:
              examples:
                Missing Required Field:
                  description: Missing Required Field
                  value:
                    error: Validation Error
                    message: Role name is required
                    timestamp: '2025-10-18T11:00:00'
                Duplicate Role:
                  description: Duplicate Role
                  value:
                    error: Duplicate Entry
                    message: Role 'PRIMARY_OWNER' already exists for this product
                    timestamp: '2025-10-18T11:00:00'
        '404':
          description: Product not found
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T11:00:00'
  /api/products/{productCode}/interest-rates:
    get:
      tags:
        - Product Interest Rates
      summary: Retrieve all interest rate tiers for a product
      description: |
        Get a paginated list of all interest rate tiers configured for a product. Shows the complete
        rate structure including all balance tiers and their respective interest rates.

        **What it returns:**
        - All interest rate tiers for the product
        - Balance ranges for each tier
        - Interest rate percentages
        - Active/inactive status per tier
        - Pagination metadata

        **Use Cases:**

        **Scenario 1: Display Rate Card to Customer**
        - Show all available interest rates
        - Display tiered structure
        - Help customer understand rate benefits

        **Scenario 2: Admin Rate Review**
        - Review current rate configuration
        - Verify tier coverage (no gaps/overlaps)
        - Check competitive positioning

        **Scenario 3: Interest Calculation**
        - System retrieves applicable rate
        - Matches customer balance to correct tier
        - Applies rate for interest computation

        **Related Endpoints:**
        - POST /api/products/{code}/interest-rates - Add new tier
        - GET /api/products/{code}/interest-rates/{id} - Get specific tier
        - GET /api/products/{code} - View product with interest type
      operationId: getInterestRates
      parameters:
        - name: productCode
          in: path
          description: Product code to retrieve interest tiers for
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: pageable
          in: query
          description: Pagination parameters (page, size, sort)
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
          example: page=0&size=20
      responses:
        '200':
          description: Interest rate tiers retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
              examples:
                FD001 Interest Rates:
                  summary: Fixed Deposit under 500000 - Multiple tenure interest rates
                  description: FD001 Interest Rates
                  value:
                    content:
                      - rateId: e75bed67-db57-405d-9f35-0af9d0d62e70
                        rateCode: INT12M001
                        termInMonths: 12
                        rateCumulative: 7.6
                        rateNonCumulativeMonthly: 7.4
                        rateNonCumulativeQuarterly: 7.5
                        rateNonCumulativeYearly: 7.6
                      - rateId: 953cb07f-40e3-477e-93c4-21aab0a9d387
                        rateCode: INT24M001
                        termInMonths: 24
                        rateCumulative: 7.7
                        rateNonCumulativeMonthly: 7.5
                        rateNonCumulativeQuarterly: 7.6
                        rateNonCumulativeYearly: 7.7
                      - rateId: 6c433990-8040-47e9-ba5e-d609b2e273d6
                        rateCode: INT36M001
                        termInMonths: 36
                        rateCumulative: 8
                        rateNonCumulativeMonthly: 7.85
                        rateNonCumulativeQuarterly: 7.9
                        rateNonCumulativeYearly: 7.8
                      - rateId: fd3feafa-b19b-4540-b42d-c0fa1efdadd6
                        rateCode: INT60M001
                        termInMonths: 60
                        rateCumulative: 8.5
                        rateNonCumulativeMonthly: 8.3
                        rateNonCumulativeQuarterly: 8.4
                        rateNonCumulativeYearly: 8.5
                    pageable:
                      pageNumber: 0
                      pageSize: 20
                      sort:
                        sorted: true
                        unsorted: false
                    totalElements: 4
                    totalPages: 1
                    last: true
                    first: true
                    empty: false
                Tiered Savings Rates:
                  summary: 3-tier savings rate structure
                  description: Tiered Savings Rates
                  value:
                    content:
                      - interestId: 661e8400-e29b-41d4-a716-446655440001
                        tierName: Tier 1 - Base
                        minBalance: 0
                        maxBalance: 10000
                        interestRate: 3.5
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                      - interestId: 662e8400-e29b-41d4-a716-446655440002
                        tierName: Tier 2 - Silver
                        minBalance: 10000.01
                        maxBalance: 50000
                        interestRate: 4
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                      - interestId: 663e8400-e29b-41d4-a716-446655440003
                        tierName: Tier 3 - Gold
                        minBalance: 50000.01
                        maxBalance: 999999999.99
                        interestRate: 4.5
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                    pageable:
                      pageNumber: 0
                      pageSize: 20
                      sort:
                        sorted: true
                        unsorted: false
                    totalElements: 3
                    totalPages: 1
                    last: true
                    first: true
                    empty: false
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: SAV-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
    post:
      tags:
        - Product Interest Rates
      summary: Configure interest rate tier for a product
      description: |
        Add a new interest rate tier to a product's rate structure. This creates tiered interest configurations
        based on balance amounts, allowing different rates for different deposit/loan amounts.

        **What it configures:**
        - Interest rate percentage for a specific balance range
        - Minimum and maximum balance thresholds
        - Rate tier identification and naming
        - Active/inactive status for the tier

        **Important Notes:**
        - Interest calculation method (SIMPLE/COMPOUND) is set at product level
        - Compounding frequency (DAILY/MONTHLY/etc.) is set at product level
        - This endpoint only configures the RATE percentages per tier
        - Balance ranges should not overlap between tiers
        - Tiers typically start from 0 and cover all ranges

        **Use Cases:**

        **Scenario 1: Tiered Savings Interest**
        - Tier 1: â‚¹0 - â‚¹10,00,000 at 3.0% APY
        - Tier 2: $10,001 - â‚¹50,00,000 at 3.5% APY
        - Tier 3: $50,001+ at 4.0% APY
        - Higher balances earn better rates

        **Scenario 2: Fixed Deposit Tenure Rates**
        - 6 months FD at 5.0%
        - 1 year FD at 5.5%
        - 3 year FD at 6.0%
        - Longer tenure earns higher rates

        **Scenario 3: Loan Amount Tiers**
        - â‚¹0 - â‚¹25,00,000 at 8.5% APR
        - $25,001 - $100,000 at 7.5% APR
        - â‚¹1,00,00,100+ at 6.5% APR
        - Larger loans get better rates

        **Scenario 4: Promotional Rate Tier**
        - Special introductory rate for first â‚¹5,00,000
        - 5.0% for balances â‚¹0 - â‚¹5,00,000
        - Then regular tiers apply

        **Tier Design Best Practices:**
        - No gaps between tiers (continuous coverage)
        - No overlaps between tiers (exclusive ranges)
        - Use 0 for minimum of first tier
        - Use very high number (999999999.99) for unlimited max
        - Clearly name tiers (Tier 1, Tier 2, or Bronze, Silver, Gold)

        **Related Endpoints:**
        - GET /api/products/{code}/interest-rates - View all tiers
        - PUT /api/products/{code}/interest-rates/{id} - Update tier
        - DELETE /api/products/{code}/interest-rates/{id} - Remove tier
        - POST /api/products - Set interest type and compounding
      operationId: addInterestRate
      parameters:
        - name: productCode
          in: path
          description: |
            Product code to add interest tier to.

            Example: SAV-HIGH-YIELD-2025

            Product must exist and have interest type configured.
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInterestRequestDTO'
        required: true
      responses:
        '201':
          description: Interest rate tier created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterestDTO'
              examples:
                FD001 12-Month Rate Created:
                  summary: Fixed Deposit 12-month tenure rate - 7.6%
                  description: FD001 12-Month Rate Created
                  value:
                    interestId: 0f2d02a8-c93b-4ae4-95b1-f38713891300
                    interestCode: FD001_12M
                    term: 12M
                    interestRate: 7.6
                    compoundingType: CUMULATIVE
                    createdAt: '2025-10-15T10:30:00'
                    updatedAt: '2025-10-15T10:30:00'
                FD001 24-Month Rate Created:
                  summary: Fixed Deposit 24-month tenure rate - 7.7%
                  description: FD001 24-Month Rate Created
                  value:
                    interestId: f0c0fc28-5e0e-4e2a-bf37-c0dd0f0c25c2
                    interestCode: FD001_24M
                    term: 24M
                    interestRate: 7.7
                    compoundingType: CUMULATIVE
                    createdAt: '2025-10-15T10:31:00'
                    updatedAt: '2025-10-15T10:31:00'
                Savings Tier Created:
                  summary: Savings account base tier
                  description: Savings Tier Created
                  value:
                    interestId: 661e8400-e29b-41d4-a716-446655440001
                    tierName: Tier 1 - Base Rate
                    minBalance: 0
                    maxBalance: 10000
                    interestRate: 3.5
                    isActive: true
                    createdAt: '2025-10-15T10:30:00'
                    updatedAt: '2025-10-15T10:30:00'
        '400':
          description: Invalid interest rate configuration
          content:
            application/json:
              examples:
                Missing Required Field:
                  description: Missing Required Field
                  value:
                    error: Validation Failed
                    message: tierName is required
                    timestamp: '2025-10-15T10:30:00'
                Invalid Balance Range:
                  description: Invalid Balance Range
                  value:
                    error: Validation Failed
                    message: minBalance (15000) cannot be greater than maxBalance (10000)
                    timestamp: '2025-10-15T10:30:00'
                Overlapping Tier:
                  description: Overlapping Tier
                  value:
                    error: Conflict
                    message: Balance range â‚¹5,00,000 - â‚¹15,00,000 overlaps with existing tier 'Tier 1' (â‚¹0 - â‚¹10,00,000)
                    timestamp: '2025-10-15T10:30:00'
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: SAV-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Failed to create interest rate tier
                timestamp: '2025-10-15T10:30:00'
  /api/products/{productCode}/communications:
    get:
      tags:
        - Product Communication Templates
      summary: Retrieve all communication templates configured for product
      description: |
        Get a paginated list of all communication templates and notification configurations for a product.

        **What You Get:**
        Complete communication matrix showing:
        - All configured templates
        - Trigger events per template
        - Communication channels used
        - Message templates and subjects
        - Frequency limits and timing
        - Active/inactive status

        **Use Cases:**

        **Scenario 1: Communication Audit**
        Review all customer touchpoints:
        - List all automated communications
        - Verify compliance notifications included
        - Check channel distribution
        - Identify communication gaps

        **Scenario 2: Customer Experience Mapping**
        Understand customer journey:
        - Map communications to lifecycle stages
        - Identify excessive notifications (spam risk)
        - Balance promotional vs transactional
        - Optimize timing and frequency

        **Scenario 3: Channel Strategy Review**
        Analyze communication channels:
        - SMS vs Email distribution
        - Mobile app notification usage
        - Postal mail requirements
        - Channel effectiveness metrics

        **Scenario 4: Compliance Verification**
        Regulatory audit requires:
        - Document all customer notifications
        - Verify mandatory disclosures
        - Check opt-out mechanisms
        - Validate data privacy compliance

        **Scenario 5: Communication Template Management**
        Maintain template library:
        - Export for documentation
        - Clone templates for similar products
        - Identify templates needing updates
        - Plan communication improvements

        **Scenario 6: Troubleshooting**
        Customer reports missing notifications:
        - Check if template exists
        - Verify template is active
        - Review trigger conditions
        - Investigate delivery issues

        **Response Includes:**
        - Full template configurations
        - Pagination details
        - Total template count
        - Sorted by communication type

        **Related Endpoints:**
        - GET /api/products/{code}/communications/{id} - View specific template
        - POST /api/products/{code}/communications - Add new template
        - PUT /api/products/{code}/communications/{id} - Update template
      operationId: getCommunications
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
        - name: pageable
          in: query
          description: |
            Pagination parameters:
            - page: Page number (0-indexed)
            - size: Items per page
            - sort: Sort field and direction

            Example: ?page=0&size=10&sort=communicationType,asc
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
          example: page=0&size=10
      responses:
        '200':
          description: Communication templates retrieved successfully
          content:
            application/json:
              examples:
                FD001 Communication Templates:
                  summary: Fixed Deposit under 500000 - monthly statement
                  description: FD001 Communication Templates
                  value:
                    content:
                      - commId: d3ba2f49-7801-4c63-99bd-4e64e5f7c155
                        commCode: COMM_MONTHLY_STATEMENT
                        communicationType: STATEMENT
                        communicationChannel: EMAIL
                        frequencyLimit: 1
                        triggerEvent: STATEMENT_READY
                        subject: Your Monthly FD Statement
                        messageTemplate: Dear Customer, Your Fixed Deposit statement for the month is ready.
                        isActive: true
                        createdAt: '2025-01-15T10:00:00'
                    totalElements: 1
                    totalPages: 1
                    number: 0
                    size: 10
                    numberOfElements: 1
                    empty: false
                Savings Account Communications:
                  summary: Multiple notification templates
                  description: Savings Account Communications
                  value:
                    content:
                      - communicationId: comm-991e8400-e29b-41d4-a716-446655440001
                        communicationName: Welcome Email
                        communicationType: TRANSACTIONAL
                        triggerEvent: ACCOUNT_OPENING
                        channels:
                          - EMAIL
                        subject: Welcome to ${PRODUCT_NAME}!
                        frequencyLimit: ONCE
                        isActive: true
                      - communicationId: comm-992e8400-e29b-41d4-a716-446655440002
                        communicationName: Transaction Alert
                        communicationType: ALERT
                        triggerEvent: TRANSACTION_COMPLETE
                        channels:
                          - SMS
                          - EMAIL
                        subject: 'Transaction Alert: ${AMOUNT}'
                        frequencyLimit: IMMEDIATE
                        isActive: true
                      - communicationId: comm-993e8400-e29b-41d4-a716-446655440003
                        communicationName: Monthly Statement
                        communicationType: STATEMENT
                        triggerEvent: STATEMENT_READY
                        channels:
                          - EMAIL
                          - IN_APP
                        subject: Your ${MONTH} Statement
                        frequencyLimit: MONTHLY
                        isActive: true
                      - communicationId: comm-994e8400-e29b-41d4-a716-446655440004
                        communicationName: Low Balance Warning
                        communicationType: ALERT
                        triggerEvent: BALANCE_LOW
                        channels:
                          - SMS
                          - PUSH_NOTIFICATION
                        subject: Low Balance Alert
                        frequencyLimit: DAILY
                        isActive: true
                    totalElements: 4
                    totalPages: 1
                    number: 0
                    size: 10
                    numberOfElements: 4
                    empty: false
                Loan Product Communications:
                  summary: Payment reminders and statements
                  description: Loan Product Communications
                  value:
                    content:
                      - communicationId: comm-995e8400-e29b-41d4-a716-446655440005
                        communicationName: Loan Disbursement Confirmation
                        communicationType: TRANSACTIONAL
                        triggerEvent: ACCOUNT_OPENING
                        channels:
                          - EMAIL
                          - SMS
                        subject: 'Loan Disbursed: ${AMOUNT}'
                        frequencyLimit: ONCE
                        isActive: true
                      - communicationId: comm-996e8400-e29b-41d4-a716-446655440006
                        communicationName: Payment Reminder
                        communicationType: REMINDER
                        triggerEvent: PAYMENT_DUE
                        channels:
                          - EMAIL
                          - SMS
                          - PUSH_NOTIFICATION
                        subject: 'Payment Due: ${AMOUNT} on ${DUE_DATE}'
                        frequencyLimit: 7_DAYS_BEFORE
                        isActive: true
                      - communicationId: comm-997e8400-e29b-41d4-a716-446655440007
                        communicationName: Overdue Notice
                        communicationType: ALERT
                        triggerEvent: PAYMENT_OVERDUE
                        channels:
                          - EMAIL
                          - SMS
                          - PHONE
                        subject: 'Urgent: Payment Overdue'
                        frequencyLimit: IMMEDIATE
                        isActive: true
                    totalElements: 3
                    totalPages: 1
                    number: 0
                    size: 10
                    numberOfElements: 3
                    empty: false
        '404':
          description: Product not found
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T12:00:00'
    post:
      tags:
        - Product Communication Templates
      summary: Configure customer communication template for product
      description: |
        Create automated communication template for customer notifications related to product events.

        **Communication Types:**
        - **ALERT** - Security alerts, fraud warnings, transaction alerts
        - **NOTICE** - Compliance notifications, legal disclosures, regulatory notices
        - **STATEMENT** - Account statements, summaries, periodic reports

        **Communication Channels:**
        - **EMAIL** - Electronic mail
        - **SMS** - Text messages
        - **POST** - Physical postal mail

        **Trigger Events:**
        - **ACCOUNT_OPENING** - New account created
        - **TRANSACTION_COMPLETE** - Transaction processed
        - **BALANCE_LOW** - Balance below threshold
        - **PAYMENT_DUE** - Payment deadline approaching
        - **MATURITY_APPROACHING** - FD/Loan maturity soon
        - **INTEREST_CREDITED** - Interest posted
        - **STATEMENT_READY** - Monthly statement generated
        - **FRAUD_DETECTED** - Suspicious activity

        **Template Configuration Includes:**
        - Communication name and type
        - Trigger event
        - Communication channels
        - Subject line and message template
        - Frequency limits (prevent spam)
        - Personalization variables
        - Active/inactive status

        **Use Cases:**

        **Scenario 1: Transaction Alerts**
        Notify customers of account activity:
        - SMS for withdrawals over â‚¹50,000
        - Email for all transfers
        - Push notification for card purchases
        - Immediate delivery

        **Scenario 2: Statement Generation**
        Monthly account statements:
        - Email with PDF attachment
        - In-app notification
        - Optional postal mail
        - Scheduled monthly delivery

        **Scenario 3: Payment Reminders**
        Loan/credit card payment due:
        - Email 7 days before due date
        - SMS 3 days before due date
        - Phone call 1 day before (overdue only)
        - Prevent late fees

        **Scenario 4: Promotional Offers**
        Marketing campaigns:
        - Email with product upgrades
        - In-app promotional banners
        - Frequency limit: max 1 per week
        - Opt-out capability required

        **Scenario 5: Compliance Notifications**
        Regulatory requirements:
        - Annual disclosures via email
        - Terms & conditions updates
        - Privacy policy changes
        - Legally mandated

        **Related Endpoints:**
        - GET /api/products/{code}/communications - View all templates
        - PUT /api/products/{code}/communications/{id} - Update template
        - DELETE /api/products/{code}/communications/{id} - Remove template
      operationId: addCommunication
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      requestBody:
        description: |
          Communication template configuration.

          Required fields:
          - communicationCode: Unique identifier for the communication template
          - communicationName: Display name of the communication
          - communicationType: ALERT, NOTICE, or STATEMENT
          - templateContent: The message template with placeholders
          - communicationChannel: EMAIL, SMS, or POST

          Optional:
          - frequencyLimit: Maximum frequency (null for unlimited, 0 for immediate, positive integer for limit)
          - description: Additional details about the communication
          - isActive: Enable/disable template (default: true)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCommunicationRequestDTO'
            examples:
              Transaction Alert:
                summary: SMS alert for large withdrawals
                description: Transaction Alert
                value:
                  communicationCode: COMM_WITHDRAWAL_ALERT
                  communicationName: Large Withdrawal Alert
                  communicationType: ALERT
                  templateContent: Dear ${CUSTOMER_NAME}, ${AMOUNT} was withdrawn from your ${PRODUCT_NAME} account (${ACCOUNT_NUMBER}) on ${DATE}. If you did not authorize this, contact us immediately.
                  communicationChannel: SMS
                  frequencyLimit: 0
                  description: Immediate SMS alert for withdrawals over threshold
                  isActive: true
              Monthly Statement:
                summary: Email statement with PDF
                description: Monthly Statement
                value:
                  communicationCode: COMM_MONTHLY_STATEMENT
                  communicationName: Monthly Account Statement
                  communicationType: STATEMENT
                  templateContent: 'Dear ${CUSTOMER_NAME}, Your monthly statement for ${PRODUCT_NAME} account ending in ${LAST_4_DIGITS} is now available. Opening balance: ${OPENING_BALANCE}, Closing balance: ${CLOSING_BALANCE}. View full statement in the attachment.'
                  communicationChannel: EMAIL
                  frequencyLimit: 1
                  description: Monthly account statement via email
                  isActive: true
              Notice Letter:
                summary: Postal notice for regulatory changes
                description: Notice Letter
                value:
                  communicationCode: COMM_REGULATORY_NOTICE
                  communicationName: Regulatory Notice
                  communicationType: NOTICE
                  templateContent: Dear ${CUSTOMER_NAME}, This is to notify you of important changes to ${PRODUCT_NAME} terms and conditions effective ${EFFECTIVE_DATE}. Please review the enclosed documents carefully.
                  communicationChannel: POST
                  frequencyLimit: null
                  description: Postal mail for regulatory notifications
                  isActive: true
        required: true
      responses:
        '201':
          description: Communication template created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommunicationDTO'
              examples:
                FD001 Monthly Statement:
                  summary: Fixed Deposit monthly statement via email
                  description: FD001 Monthly Statement
                  value:
                    commId: d3ba2f49-7801-4c63-99bd-4e64e5f7c155
                    commCode: COMM_MONTHLY_STATEMENT
                    communicationType: STATEMENT
                    communicationChannel: EMAIL
                    event: COMM_MONTHLY_STATEMENT
                    template: Dear Customer, Your Fixed Deposit statement for the month is ready.
                    frequencyLimit: 1
                    isActive: true
                    createdAt: '2025-10-18T12:00:00'
                Transaction Alert:
                  summary: SMS alert for large withdrawals
                  description: Transaction Alert
                  value:
                    commId: 991e8400-e29b-41d4-a716-446655440001
                    commCode: COMM_WITHDRAWAL_ALERT
                    communicationType: ALERT
                    channel: SMS
                    event: COMM_WITHDRAWAL_ALERT
                    template: Dear ${CUSTOMER_NAME}, ${AMOUNT} was withdrawn from your ${PRODUCT_NAME} account (${ACCOUNT_NUMBER}) on ${DATE}. If you did not authorize this, contact us immediately.
                    frequencyLimit: 0
                Notice Letter:
                  summary: Postal notice for regulatory changes
                  description: Notice Letter
                  value:
                    commId: 993e8400-e29b-41d4-a716-446655440003
                    commCode: COMM_REGULATORY_NOTICE
                    communicationType: NOTICE
                    channel: POST
                    event: COMM_REGULATORY_NOTICE
                    template: Dear ${CUSTOMER_NAME}, This is to notify you of important changes to ${PRODUCT_NAME} terms and conditions effective ${EFFECTIVE_DATE}. Please review the enclosed documents carefully.
                    frequencyLimit: null
        '400':
          description: Invalid communication template configuration
          content:
            application/json:
              examples:
                Missing Required Field:
                  description: Missing Required Field
                  value:
                    error: Validation Error
                    message: Communication type is required
                    timestamp: '2025-10-18T12:00:00'
                Invalid Channel:
                  description: Invalid Channel
                  value:
                    error: Validation Error
                    message: 'Invalid channel: INVALID_CHANNEL. Allowed: EMAIL, SMS, POST'
                    timestamp: '2025-10-18T12:00:00'
                Duplicate Template:
                  description: Duplicate Template
                  value:
                    error: Duplicate Entry
                    message: Communication template for event 'TRANSACTION_COMPLETE' with channel 'SMS' already exists for this product
                    timestamp: '2025-10-18T12:00:00'
        '404':
          description: Product not found
          content:
            application/json:
              examples:
                Product Not Found:
                  description: Product Not Found
                  value:
                    error: Resource Not Found
                    message: 'Product not found with code: SAV-INVALID-2025'
                    timestamp: '2025-10-18T12:00:00'
  /api/products/{productCode}/charges:
    get:
      tags:
        - Product Charges & Fees
      summary: Retrieve all fees and charges for product
      description: |
        Get complete list of all fees and charges configured for this product.

        **Use Cases:**

        **Scenario 1: Display Fee Schedule to Customer**
        - Show all applicable fees
        - Display charge amounts and frequency
        - Provide transparent pricing

        **Scenario 2: Fee Calculation**
        - Retrieve applicable charges
        - Calculate total fees for account
        - Apply charges based on frequency

        **Scenario 3: Admin Fee Review**
        - Review current fee structure
        - Compare with competitors
        - Adjust pricing strategy
      operationId: getCharges
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Charges retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
              examples:
                FD001 Charges:
                  summary: Fixed Deposit under 500000 - Penalty and maintenance fees
                  description: FD001 Charges
                  value:
                    content:
                      - chargeId: 31435394-2af5-4118-9cc7-4616df6a64ee
                        chargeCode: FEE001
                        chargeType: FEE
                        calculationType: FLAT
                        frequency: QUARTERLY
                        amount: 200
                      - chargeId: 9953d914-423c-45af-936b-ebffbdd709be
                        chargeCode: PEN-L-001
                        chargeType: PENALTY
                        calculationType: PERCENTAGE
                        frequency: ONE_TIME
                        amount: 0.5
                      - chargeId: e0167e4b-0102-4d8c-ad37-02ddb1e0f83d
                        chargeCode: PEN-H-001
                        chargeType: PENALTY
                        calculationType: PERCENTAGE
                        frequency: ONE_TIME
                        amount: 1
                    totalElements: 3
                    totalPages: 1
                Savings Account Charges:
                  summary: Standard savings account fees
                  description: Savings Account Charges
                  value:
                    content:
                      - chargeId: 771e8400-e29b-41d4-a716-446655440001
                        chargeName: Minimum Balance Fee
                        chargeType: FLAT
                        chargeAmount: 5
                        chargeFrequency: MONTHLY
                        isActive: true
                      - chargeId: 772e8400-e29b-41d4-a716-446655440002
                        chargeName: ATM Withdrawal Fee
                        chargeType: FLAT
                        chargeAmount: 2
                        chargeFrequency: PER_OCCURRENCE
                        isActive: true
                    totalElements: 2
                    totalPages: 1
        '404':
          description: Product not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageProductChargeDTO'
    post:
      tags:
        - Product Charges & Fees
      summary: Configure fee or charge for product
      description: |
        Add a new fee or charge to a product's pricing structure. Charges can be flat amounts or
        percentage-based, with various frequency options.

        **Charge Types:**
        - **FLAT**: Fixed amount (e.g., â‚¹500 monthly maintenance fee)
        - **PERCENTAGE**: Percentage of amount (e.g., 2% transaction fee)

        **Frequency Options:**
        - **ONE_TIME**: Charged once (account opening, closure)
        - **MONTHLY**: Charged every month
        - **QUARTERLY**: Charged every 3 months
        - **ANNUALLY**: Charged every year
        - **PER_OCCURRENCE**: Charged per event (per transaction, per overdraft)

        **Common Charge Examples:**

        **Savings Account:**
        - Minimum balance fee: â‚¹500 FLAT, MONTHLY
        - ATM fee: â‚¹200 FLAT, PER_OCCURRENCE
        - Account closure: â‚¹2,500 FLAT, ONE_TIME

        **Loan Product:**
        - Origination fee: 2% PERCENTAGE, ONE_TIME
        - Late payment penalty: â‚¹3,500 FLAT, PER_OCCURRENCE
        - Prepayment penalty: 1% PERCENTAGE, PER_OCCURRENCE

        **Current Account:**
        - Monthly maintenance: â‚¹1,000 FLAT, MONTHLY
        - Checkbook fee: â‚¹1,500 FLAT, PER_OCCURRENCE
        - Wire transfer: â‚¹2,500 FLAT, PER_OCCURRENCE

        **Use Cases:**

        **Scenario 1: Account Maintenance Fee**
        - Monthly fee for low balance accounts
        - â‚¹500 flat fee charged monthly
        - Waived if min balance maintained

        **Scenario 2: Transaction Charges**
        - Fee per wire transfer
        - â‚¹2,500 flat fee per occurrence
        - Applied immediately on transaction

        **Scenario 3: Loan Origination Fee**
        - One-time setup fee
        - 2% of loan amount
        - Charged when loan disbursed

        **Related Endpoints:**
        - GET /api/products/{code}/charges - View all charges
        - PUT /api/products/{code}/charges/{id} - Update charge
        - DELETE /api/products/{code}/charges/{id} - Remove charge
      operationId: addCharge
      parameters:
        - name: productCode
          in: path
          description: Product code
          required: true
          schema:
            type: string
          example: SAV-HIGH-YIELD-2025
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductChargeRequestDTO'
        required: true
      responses:
        '201':
          description: Charge created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductChargeDTO'
              examples:
                FD001 Quarterly Fee Created:
                  summary: Fixed Deposit quarterly maintenance fee
                  description: FD001 Quarterly Fee Created
                  value:
                    chargeId: 13c4bb9f-ae57-4c3c-95fd-2ae81be8c1e1
                    chargeCode: FEE001
                    chargeName: FD Quarterly Fee
                    chargeType: FLAT
                    chargeAmount: 200
                    chargeFrequency: QUARTERLY
                    isActive: true
                    createdAt: '2025-10-15T10:30:00'
                FD001 Low Penalty Created:
                  summary: Fixed Deposit premature withdrawal penalty (low)
                  description: FD001 Low Penalty Created
                  value:
                    chargeId: f72c49ef-e5eb-442c-b76d-14ad7e3ecbbf
                    chargeCode: PEN-L-001
                    chargeName: Penalty for premature withdrawal of FD - low
                    chargeType: PERCENTAGE
                    chargeAmount: 0.5
                    chargeFrequency: PER_OCCURRENCE
                    isActive: true
                    createdAt: '2025-10-15T10:31:00'
                Savings Maintenance Fee:
                  description: Savings Maintenance Fee
                  value:
                    chargeId: 771e8400-e29b-41d4-a716-446655440001
                    chargeName: Minimum Balance Fee
                    chargeType: FLAT
                    chargeAmount: 5
                    chargeFrequency: MONTHLY
                    isActive: true
                    createdAt: '2025-10-15T10:30:00'
        '400':
          description: Invalid charge data
          content:
            application/json:
              example:
                error: Validation Failed
                message: chargeName is required
                timestamp: '2025-10-15T10:30:00'
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: SAV-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
  /api/products/{productCode}/balances:
    get:
      tags:
        - Product Balance Types
      summary: Retrieve all balance types configured for product
      description: |
        Get a complete list of balance types that are applicable/supported for this product.
        Shows which balance categories can be tracked for accounts using this product.

        **What it returns:**
        - All configured balance types for the product
        - Active/inactive status per type
        - Creation timestamps

        **Use Cases:**

        **Scenario 1: Account Opening**
        - System retrieves applicable balance types
        - Creates balance entries for new account
        - Initializes all required balance categories

        **Scenario 2: Product Configuration Review**
        - Admin reviews balance structure
        - Verifies all necessary types configured
        - Checks for missing balance categories

        **Scenario 3: Balance Report Generation**
        - Determine which balances to display
        - Show only applicable balance types
        - Hide non-configured categories

        **Scenario 4: Product Comparison**
        - Compare balance structures across products
        - Identify differences in tracking
        - Standardize configurations

        **Related Endpoints:**
        - POST /api/products/{code}/balances - Add new balance type
        - GET /api/products/{code}/balances/{type} - Get specific type
        - GET /api/products/{code} - View complete product config
      operationId: getBalances
      parameters:
        - name: productCode
          in: path
          description: Product code to retrieve balance types for
          required: true
          schema:
            type: string
          example: LOAN-PERSONAL-5Y
        - name: pageable
          in: query
          description: Pagination parameters
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
          example: page=0&size=20
      responses:
        '200':
          description: Balance types retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
              examples:
                FD001 Balance Types:
                  summary: Fixed Deposit under 500000 - Principal, Interest, and Penalty balances
                  description: FD001 Balance Types
                  value:
                    content:
                      - balanceId: 88b934e7-9688-49c1-9c59-0fbff87be971
                        balanceType: FD_PRINCIPAL
                        isActive: true
                        createdAt: '2025-10-19T18:45:23.47411'
                      - balanceId: 1360a975-0102-40d1-87d9-047c927dc794
                        balanceType: FD_INTEREST
                        isActive: true
                        createdAt: '2025-10-19T18:44:59.9126'
                      - balanceId: bbb417ac-fd89-4243-a995-47746d0980b7
                        balanceType: PENALTY
                        isActive: true
                        createdAt: '2025-10-19T18:45:40.10681'
                    totalElements: 3
                    totalPages: 1
                    number: 0
                    size: 20
                Loan Product Balances:
                  summary: 3 balance types for personal loan
                  description: Loan Product Balances
                  value:
                    content:
                      - balanceId: 881e8400-e29b-41d4-a716-446655440001
                        balanceType: LOAN_PRINCIPAL
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                      - balanceId: 882e8400-e29b-41d4-a716-446655440002
                        balanceType: LOAN_INTEREST
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                      - balanceId: 883e8400-e29b-41d4-a716-446655440003
                        balanceType: PENALTY
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                    totalElements: 3
                    totalPages: 1
                    number: 0
                    size: 20
                Savings Product Balances:
                  summary: 2 balance types for savings account
                  description: Savings Product Balances
                  value:
                    content:
                      - balanceId: 884e8400-e29b-41d4-a716-446655440004
                        balanceType: AVAILABLE_BALANCE
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                      - balanceId: 885e8400-e29b-41d4-a716-446655440005
                        balanceType: LEDGER_BALANCE
                        isActive: true
                        createdAt: '2025-01-01T00:00:00'
                    totalElements: 2
                    totalPages: 1
                    number: 0
                    size: 20
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: LOAN-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
    post:
      tags:
        - Product Balance Types
      summary: Configure applicable balance type for product
      description: |
        Mark a specific balance type as applicable/supported for this product. This defines which
        balance categories can be tracked for accounts using this product.

        **Available Balance Types:**
        - **LOAN_PRINCIPAL**: Main loan amount borrowed
        - **LOAN_INTEREST**: Accrued interest on loan
        - **FD_PRINCIPAL**: Fixed deposit principal amount
        - **FD_INTEREST**: Interest earned on FD
        - **OVERDRAFT**: Overdraft/credit facility amount
        - **PENALTY**: Penalty charges and fees

        **Product Type Examples:**

        **Personal Loan:**
        - LOAN_PRINCIPAL (required)
        - LOAN_INTEREST (required)
        - PENALTY (optional for late fees)

        **Fixed Deposit:**
        - FD_PRINCIPAL (required)
        - FD_INTEREST (required)

        **Savings Account with OD:**
        - FD_PRINCIPAL (for savings balance)
        - FD_INTEREST (for interest earned)
        - OVERDRAFT (for overdraft facility)
        - PENALTY (for overdraft charges)

        **Current Account:**
        - FD_PRINCIPAL (for current balance)
        - OVERDRAFT (if overdraft facility available)
        - PENALTY (for service charges)

        **Use Cases:**

        **Scenario 1: Configure Loan Product**
        - Add LOAN_PRINCIPAL to track loan amount
        - Add LOAN_INTEREST to track interest due
        - Add PENALTY to track late payment fees

        **Scenario 2: Configure FD Product**
        - Add FD_PRINCIPAL to track deposit amount
        - Add FD_INTEREST to track interest earned
        - Simple 2-balance configuration

        **Scenario 3: Enable Overdraft Feature**
        - Existing savings product
        - Add OVERDRAFT balance type
        - Add PENALTY for overdraft charges

        **Important Notes:**
        - Each balance type can only be added once per product
        - Balance types define structure, not actual amounts
        - Actual balances are tracked at account level
        - isActive flag can disable without removing

        **Related Endpoints:**
        - GET /api/products/{code}/balances - View all configured types
        - PUT /api/products/{code}/balances/{type} - Update balance config
        - DELETE /api/products/{code}/balances/{type} - Remove balance type
      operationId: addBalance
      parameters:
        - name: productCode
          in: path
          description: |
            Product code to add balance type to.

            Example: LOAN-PERSONAL-5Y
          required: true
          schema:
            type: string
          example: LOAN-PERSONAL-5Y
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBalanceRequestDTO'
        required: true
      responses:
        '201':
          description: Balance type added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBalanceDTO'
              examples:
                FD001 Principal Added:
                  summary: Added FD_PRINCIPAL to FD001 product
                  description: FD001 Principal Added
                  value:
                    balanceId: 4deff13c-a7de-4a01-b116-fae6f9ea6e17
                    balanceCode: FD_PRINCIPAL
                    balanceType: FD_PRINCIPAL
                    isActive: true
                    createdAt: '2025-10-15T10:30:00'
                FD001 Interest Added:
                  summary: Added FD_INTEREST to FD001 product
                  description: FD001 Interest Added
                  value:
                    balanceId: 4b0da79d-87d4-454a-bcdf-c0c9b06c0c16
                    balanceCode: FD_INTEREST
                    balanceType: FD_INTEREST
                    isActive: true
                    createdAt: '2025-10-15T10:31:00'
                Loan Principal Added:
                  summary: Added LOAN_PRINCIPAL to loan product
                  description: Loan Principal Added
                  value:
                    balanceId: 881e8400-e29b-41d4-a716-446655440001
                    balanceType: LOAN_PRINCIPAL
                    isActive: true
                    createdAt: '2025-10-15T10:30:00'
        '400':
          description: Invalid request or duplicate balance type
          content:
            application/json:
              examples:
                Duplicate Balance Type:
                  description: Duplicate Balance Type
                  value:
                    error: Conflict
                    message: Balance type LOAN_PRINCIPAL already exists for product LOAN-PERSONAL-5Y
                    timestamp: '2025-10-15T10:30:00'
                Invalid Balance Type:
                  description: Invalid Balance Type
                  value:
                    error: Validation Failed
                    message: 'Invalid balanceType: INVALID_TYPE. Must be one of: LOAN_PRINCIPAL, LOAN_INTEREST, FD_PRINCIPAL, FD_INTEREST, OVERDRAFT, PENALTY'
                    timestamp: '2025-10-15T10:30:00'
        '404':
          description: Product not found
          content:
            application/json:
              example:
                error: Resource Not Found
                message: 'Product not found with code: LOAN-INVALID-2025'
                timestamp: '2025-10-15T10:30:00'
  /api/products/search:
    get:
      tags:
        - Product Management
      summary: Advanced product search with multiple filters
      description: |
        Search for products using flexible filtering criteria. All parameters are optional and can be combined
        for precise results.

        **Filter Options:**
        - **productType**: Filter by product category (SAVINGS, LOAN, DEPOSIT, etc.)
        - **status**: Filter by lifecycle status (ACTIVE, INACTIVE, PENDING)
        - **Date Range**: Filter by effective date period (startDate + endDate)

        **Filter Combinations:**
        - No parameters â†’ Returns all products
        - Single parameter â†’ Filter by that criterion only
        - Multiple parameters â†’ AND logic (all criteria must match)

        **Date Range Logic:**
        - Products where effectiveStartDate >= startDate
        - Products where effectiveEndDate <= endDate (or null)
        - Finds products active during the specified period

        **Use Cases:**

        **Scenario 1: Find All Active Savings Products**
        - productType=SAVINGS
        - status=ACTIVE
        - Use for customer product selection

        **Scenario 2: Find Products Launched This Year**
        - startDate=2025-01-01
        - endDate=2025-12-31
        - Review new product launches

        **Scenario 3: Find Inactive Loan Products**
        - productType=LOAN
        - status=INACTIVE
        - Identify discontinued loan offerings

        **Scenario 4: Find Current Active Products**
        - status=ACTIVE
        - No date filters
        - Get all currently offered products

        **Scenario 5: Product Type Comparison**
        - productType=DEPOSIT
        - Compare all deposit products
        - View interest rates across FD variants

        **Related Endpoints:**
        - GET /api/products - Get all products with pagination
        - GET /api/products/{code} - Get specific product details
        - POST /api/products - Create new product

        **Performance Notes:**
        - Indexed on productType and status
        - Date range queries may be slower on large datasets
        - Consider pagination for large result sets
        - Results are not paginated (returns all matches)
      operationId: searchProducts
      parameters:
        - name: productType
          in: query
          description: |
            Filter by product type (optional).

            Valid values:
            - SAVINGS
            - CURRENT
            - LOAN
            - CREDIT_CARD
            - FIXED_DEPOSIT
            - RECURRING_DEPOSIT

            Case-insensitive. Omit to search all types.
          required: false
          schema:
            type: string
          example: SAVINGS
        - name: status
          in: query
          description: |
            Filter by status (optional).

            Valid values:
            - ACTIVE (currently offered)
            - INACTIVE (discontinued)
            - PENDING (awaiting approval)
            - SUSPENDED (temporarily unavailable)
            - CLOSED (permanently unavailable)

            Case-insensitive. Omit to search all statuses.
          required: false
          schema:
            type: string
          example: ACTIVE
        - name: startDate
          in: query
          description: |
            Start date for effective date range (optional).

            Format: YYYY-MM-DD (ISO-8601)
            Example: 2025-01-01

            Must be used with endDate parameter.
            Finds products effective from this date onward.
          required: false
          schema:
            type: string
          example: '2025-01-01'
        - name: endDate
          in: query
          description: |
            End date for effective date range (optional).

            Format: YYYY-MM-DD (ISO-8601)
            Example: 2025-12-31

            Must be used with startDate parameter.
            Must be >= startDate.
            Finds products effective until this date.
          required: false
          schema:
            type: string
          example: '2025-12-31'
      responses:
        '200':
          description: Search completed successfully
          content:
            application/json:
              schema:
                type: string
              examples:
                Active Savings Products:
                  summary: 'Search result: Active savings products'
                  description: Active Savings Products
                  value:
                    - productId: 550e8400-e29b-41d4-a716-446655440000
                      productCode: SAV-HIGH-YIELD-2025
                      productName: High Yield Savings Account
                      productType: SAVINGS
                      currency: INR
                      status: ACTIVE
                      interestType: COMPOUND
                      compoundingFrequency: DAILY
                      effectiveStartDate: '2025-01-01'
                      effectiveEndDate: null
                      createdAt: '2025-01-01T00:00:00'
                    - productId: 551e8400-e29b-41d4-a716-446655440001
                      productCode: SAV-REGULAR-2025
                      productName: Regular Savings Account
                      productType: SAVINGS
                      currency: INR
                      status: ACTIVE
                      interestType: SIMPLE
                      compoundingFrequency: null
                      effectiveStartDate: '2025-01-01'
                      effectiveEndDate: null
                      createdAt: '2025-01-01T00:00:00'
                Date Range Search:
                  summary: Products launched in Q1 2025
                  description: Date Range Search
                  value:
                    - productId: 660e8400-e29b-41d4-a716-446655440111
                      productCode: FD-1Y-2025
                      productName: 1 Year Fixed Deposit
                      productType: DEPOSIT
                      currency: INR
                      status: ACTIVE
                      interestType: COMPOUND
                      compoundingFrequency: QUARTERLY
                      effectiveStartDate: '2025-01-15'
                      effectiveEndDate: null
                      createdAt: '2025-01-15T00:00:00'
                    - productId: 661e8400-e29b-41d4-a716-446655440112
                      productCode: FD-3Y-2025
                      productName: 3 Year Fixed Deposit
                      productType: DEPOSIT
                      currency: INR
                      status: ACTIVE
                      interestType: COMPOUND
                      compoundingFrequency: QUARTERLY
                      effectiveStartDate: '2025-02-01'
                      effectiveEndDate: null
                      createdAt: '2025-02-01T00:00:00'
                No Results:
                  summary: Search with no matches
                  description: No Results
                  value: []
        '400':
          description: Invalid search parameters
          content:
            application/json:
              examples:
                Invalid Product Type:
                  description: Invalid Product Type
                  value:
                    error: Validation Failed
                    message: 'Invalid productType: INVALID_TYPE. Valid values: SAVINGS, CURRENT, LOAN, CREDIT_CARD, FIXED_DEPOSIT, RECURRING_DEPOSIT'
                    timestamp: '2025-10-15T10:30:00'
                Invalid Date Format:
                  description: Invalid Date Format
                  value:
                    error: Validation Failed
                    message: 'Invalid date format for startDate: ''2025/01/01''. Expected format: YYYY-MM-DD'
                    timestamp: '2025-10-15T10:30:00'
                Invalid Date Range:
                  description: Invalid Date Range
                  value:
                    error: Validation Failed
                    message: endDate (2025-01-01) must be after startDate (2025-12-31)
                    timestamp: '2025-10-15T10:30:00'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: Internal Server Error
                message: Failed to execute search query
                timestamp: '2025-10-15T10:30:00'
components:
  schemas:
    CreateOrUpdateProductRequestDTO:
      type: object
      properties:
        productCode:
          type: string
          minLength: 1
        productName:
          type: string
          minLength: 1
        productType:
          type: string
        description:
          type: string
        currency:
          type: string
        status:
          type: string
        efctv_date:
          type: string
          format: date-time
        expr_date:
          type: string
          format: date-time
        interestType:
          type: string
        compoundingFrequency:
          type: string
      required:
        - currency
        - efctv_date
        - productCode
        - productName
        - productType
    ProductBalanceDTO:
      type: object
      properties:
        balanceId:
          type: string
          format: uuid
        balanceType:
          type: string
          enum:
            - LOAN_PRINCIPAL
            - LOAN_INTEREST
            - FD_PRINCIPAL
            - FD_INTEREST
            - OVERDRAFT
            - PENALTY
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
    ProductChargeDTO:
      type: object
      properties:
        chargeId:
          type: string
          format: uuid
        chargeCode:
          type: string
        chargeName:
          type: string
        chargeType:
          type: string
          enum:
            - INTEREST
            - FEE
            - TAX
            - PENALTY
        calculationType:
          type: string
          enum:
            - FLAT
            - PERCENTAGE
        frequency:
          type: string
          enum:
            - ONE_TIME
            - MONTHLY
            - QUARTERLY
            - ANNUALLY
        amount:
          type: number
        debitCredit:
          type: string
          enum:
            - DEBIT
            - CREDIT
    ProductCommunicationDTO:
      type: object
      properties:
        commId:
          type: string
          format: uuid
        commCode:
          type: string
        communicationType:
          type: string
          enum:
            - ALERT
            - NOTICE
            - STATEMENT
        channel:
          type: string
          enum:
            - EMAIL
            - SMS
            - POST
        event:
          type: string
        template:
          type: string
        frequencyLimit:
          type: integer
          format: int32
    ProductDetailsDTO:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        productCode:
          type: string
        productName:
          type: string
        productType:
          type: string
          enum:
            - FIXED_DEPOSIT
            - SAVINGS
            - CURRENT
            - LOAN
        currency:
          type: string
          enum:
            - INR
            - JPY
            - AED
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DRAFT
        interestType:
          type: string
          enum:
            - SIMPLE
            - COMPOUND
        compoundingFrequency:
          type: string
          enum:
            - DAILY
            - MONTHLY
            - QUARTERLY
            - SEMI_ANNUALLY
            - ANNUALLY
        productRules:
          type: array
          items:
            $ref: '#/components/schemas/ProductRuleDTO'
        productCharges:
          type: array
          items:
            $ref: '#/components/schemas/ProductChargeDTO'
        productRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProductRoleDTO'
        productTransactions:
          type: array
          items:
            $ref: '#/components/schemas/ProductTransactionDTO'
        productBalances:
          type: array
          items:
            $ref: '#/components/schemas/ProductBalanceDTO'
        productCommunications:
          type: array
          items:
            $ref: '#/components/schemas/ProductCommunicationDTO'
        productInterests:
          type: array
          items:
            $ref: '#/components/schemas/ProductInterestDTO'
        createdAt:
          type: string
          format: date-time
        efctv_date:
          type: string
          format: date-time
    ProductInterestDTO:
      type: object
      properties:
        rateId:
          type: string
          format: uuid
        rateCode:
          type: string
        termInMonths:
          type: integer
          format: int32
        rateCumulative:
          type: number
        rateNonCumulativeMonthly:
          type: number
        rateNonCumulativeQuarterly:
          type: number
        rateNonCumulativeYearly:
          type: number
    ProductRoleDTO:
      type: object
      properties:
        roleId:
          type: string
          format: uuid
        roleCode:
          type: string
        roleType:
          type: string
          enum:
            - OWNER
            - CO_OWNER
            - GUARDIAN
            - NOMINEE
            - BORROWER
            - GUARANTOR
        roleName:
          type: string
        maxCount:
          type: integer
          format: int32
        mandatory:
          type: boolean
    ProductRuleDTO:
      type: object
      properties:
        ruleId:
          type: string
          format: uuid
        ruleCode:
          type: string
        ruleName:
          type: string
        ruleType:
          type: string
          enum:
            - SIMPLE
            - COMPLEX
        dataType:
          type: string
          enum:
            - NUMBER
            - TEXT
            - DATE
            - PERCENTAGE
            - CURRENCY
            - DURATION
            - FREQUENCY
            - AMOUNT_WITH_CURRENCY
            - JSON
            - JSON_MATRIX
        ruleValue:
          type: string
        validationType:
          type: string
          enum:
            - MIN_MAX
            - EXACT
            - LIST
    ProductTransactionDTO:
      type: object
      properties:
        transactionId:
          type: string
          format: uuid
        transactionCode:
          type: string
        transactionType:
          type: string
          enum:
            - DEPOSIT
            - WITHDRAWAL
            - INTEREST_ACCRUED
            - DISBURSEMENT
            - PAYMENT
        allowed:
          type: boolean
    ProductTransactionRequestDTO:
      type: object
      properties:
        transactionCode:
          type: string
          minLength: 1
        transactionName:
          type: string
          minLength: 1
        transactionType:
          type: string
        debitCreditIndicator:
          type: string
        minimumAmount:
          type: number
          format: double
        maximumAmount:
          type: number
          format: double
        description:
          type: string
        active:
          type: boolean
      required:
        - debitCreditIndicator
        - transactionCode
        - transactionName
        - transactionType
    ProductRuleRequestDTO:
      type: object
      description: |
        Business rule configuration.

        Required fields:
        - ruleName: Descriptive name
        - ruleType: VALIDATION, LIMIT, ELIGIBILITY, etc.
        - ruleExpression: Logic/condition

        Optional fields:
        - rulePriority: Execution order (default: 999)
        - errorMessage: User-friendly violation message
        - isActive: Enable/disable (default: true)

        See request examples for common rule patterns.
      properties:
        ruleCode:
          type: string
          minLength: 1
        ruleName:
          type: string
          minLength: 1
        ruleType:
          type: string
          enum:
            - SIMPLE
            - COMPLEX
        dataType:
          type: string
          enum:
            - NUMBER
            - TEXT
            - DATE
            - PERCENTAGE
            - CURRENCY
            - DURATION
            - FREQUENCY
            - AMOUNT_WITH_CURRENCY
            - JSON
            - JSON_MATRIX
        ruleValue:
          type: string
          minLength: 1
        validationType:
          type: string
          enum:
            - MIN_MAX
            - EXACT
            - LIST
      required:
        - dataType
        - ruleCode
        - ruleName
        - ruleType
        - ruleValue
        - validationType
    ProductRoleRequestDTO:
      type: object
      properties:
        roleCode:
          type: string
          minLength: 1
        roleName:
          type: string
          minLength: 1
        roleType:
          type: string
        description:
          type: string
        active:
          type: boolean
      required:
        - roleCode
        - roleName
        - roleType
    ProductInterestRequestDTO:
      type: object
      description: |
        Interest rate tier configuration.

        Required fields:
        - tierName: Descriptive name for the tier
        - minBalance: Minimum balance for this tier
        - maxBalance: Maximum balance for this tier
        - interestRate: Annual percentage rate

        Optional fields:
        - isActive: Enable/disable tier (default: true)

        See request examples for common tier configurations.
      properties:
        rateCode:
          type: string
        termInMonths:
          type: integer
          format: int32
        rateCumulative:
          type: number
          minimum: 0
        rateNonCumulativeMonthly:
          type: number
          minimum: 0
        rateNonCumulativeQuarterly:
          type: number
          minimum: 0
        rateNonCumulativeYearly:
          type: number
          minimum: 0
      required:
        - rateCode
        - rateCumulative
        - rateNonCumulativeMonthly
        - rateNonCumulativeQuarterly
        - rateNonCumulativeYearly
        - termInMonths
    ProductCommunicationRequestDTO:
      type: object
      properties:
        communicationCode:
          type: string
          minLength: 1
        communicationName:
          type: string
          minLength: 1
        communicationType:
          type: string
          enum:
            - ALERT
            - NOTICE
            - STATEMENT
        templateContent:
          type: string
          minLength: 1
        communicationChannel:
          type: string
          enum:
            - EMAIL
            - SMS
            - POST
        frequencyLimit:
          type: integer
          format: int32
          minimum: 0
        description:
          type: string
        active:
          type: boolean
      required:
        - communicationChannel
        - communicationCode
        - communicationName
        - communicationType
        - templateContent
    ProductChargeRequestDTO:
      type: object
      description: Charge configuration
      properties:
        chargeCode:
          type: string
          minLength: 1
        chargeName:
          type: string
          minLength: 1
        chargeType:
          type: string
          enum:
            - INTEREST
            - FEE
            - TAX
            - PENALTY
        calculationType:
          type: string
          enum:
            - FLAT
            - PERCENTAGE
        frequency:
          type: string
          enum:
            - ONE_TIME
            - MONTHLY
            - QUARTERLY
            - ANNUALLY
        chargeValue:
          type: number
        debitCredit:
          type: string
          enum:
            - DEBIT
            - CREDIT
      required:
        - calculationType
        - chargeCode
        - chargeName
        - chargeType
        - frequency
    ProductBalanceRequestDTO:
      type: object
      description: |
        Balance type configuration.

        Required:
        - balanceType: One of the 6 available types

        Optional:
        - isActive: Enable/disable (default: true)
      properties:
        balanceType:
          type: string
          enum:
            - LOAN_PRINCIPAL
            - LOAN_INTEREST
            - FD_PRINCIPAL
            - FD_INTEREST
            - OVERDRAFT
            - PENALTY
        isActive:
          type: boolean
      required:
        - balanceType
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    Page:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items: {}
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageProductChargeDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductChargeDTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      description: 'JWT token from NEXA Bank Auth Service. Format: `Bearer <your_jwt_token>`. Get token from: http://localhost:3020/api/auth/login'
      scheme: bearer
      bearerFormat: JWT
